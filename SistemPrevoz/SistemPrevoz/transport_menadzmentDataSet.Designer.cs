//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SistemPrevoz {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("transport_menadzmentDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class transport_menadzmentDataSet : global::System.Data.DataSet {
        
        private korisniciDataTable tablekorisnici;
        
        private lokacijaDataTable tablelokacija;
        
        private putnikDataTable tableputnik;
        
        private rezervacijaDataTable tablerezervacija;
        
        private turaDataTable tabletura;
        
        private vozacDataTable tablevozac;
        
        private voziloDataTable tablevozilo;
        
        private tureDataTable tableture;
        
        private rezervacija_po_turiDataTable tablerezervacija_po_turi;
        
        private vozac_vozilo_po_turiDataTable tablevozac_vozilo_po_turi;
        
        private global::System.Data.DataRelation relationfk_rezervacija_putnikID;
        
        private global::System.Data.DataRelation relationfk_rezervacija_turaID;
        
        private global::System.Data.DataRelation relationfk_tura_startnalokacijaID;
        
        private global::System.Data.DataRelation relationfk_tura_vozacID;
        
        private global::System.Data.DataRelation relationfk_tura_voziloID;
        
        private global::System.Data.DataRelation relationfk_tura_zavrsnalokacijaID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public transport_menadzmentDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected transport_menadzmentDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["korisnici"] != null)) {
                    base.Tables.Add(new korisniciDataTable(ds.Tables["korisnici"]));
                }
                if ((ds.Tables["lokacija"] != null)) {
                    base.Tables.Add(new lokacijaDataTable(ds.Tables["lokacija"]));
                }
                if ((ds.Tables["putnik"] != null)) {
                    base.Tables.Add(new putnikDataTable(ds.Tables["putnik"]));
                }
                if ((ds.Tables["rezervacija"] != null)) {
                    base.Tables.Add(new rezervacijaDataTable(ds.Tables["rezervacija"]));
                }
                if ((ds.Tables["tura"] != null)) {
                    base.Tables.Add(new turaDataTable(ds.Tables["tura"]));
                }
                if ((ds.Tables["vozac"] != null)) {
                    base.Tables.Add(new vozacDataTable(ds.Tables["vozac"]));
                }
                if ((ds.Tables["vozilo"] != null)) {
                    base.Tables.Add(new voziloDataTable(ds.Tables["vozilo"]));
                }
                if ((ds.Tables["ture"] != null)) {
                    base.Tables.Add(new tureDataTable(ds.Tables["ture"]));
                }
                if ((ds.Tables["rezervacija_po_turi"] != null)) {
                    base.Tables.Add(new rezervacija_po_turiDataTable(ds.Tables["rezervacija_po_turi"]));
                }
                if ((ds.Tables["vozac_vozilo_po_turi"] != null)) {
                    base.Tables.Add(new vozac_vozilo_po_turiDataTable(ds.Tables["vozac_vozilo_po_turi"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public korisniciDataTable korisnici {
            get {
                return this.tablekorisnici;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lokacijaDataTable lokacija {
            get {
                return this.tablelokacija;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public putnikDataTable putnik {
            get {
                return this.tableputnik;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rezervacijaDataTable rezervacija {
            get {
                return this.tablerezervacija;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public turaDataTable tura {
            get {
                return this.tabletura;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vozacDataTable vozac {
            get {
                return this.tablevozac;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public voziloDataTable vozilo {
            get {
                return this.tablevozilo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tureDataTable ture {
            get {
                return this.tableture;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rezervacija_po_turiDataTable rezervacija_po_turi {
            get {
                return this.tablerezervacija_po_turi;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vozac_vozilo_po_turiDataTable vozac_vozilo_po_turi {
            get {
                return this.tablevozac_vozilo_po_turi;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            transport_menadzmentDataSet cln = ((transport_menadzmentDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["korisnici"] != null)) {
                    base.Tables.Add(new korisniciDataTable(ds.Tables["korisnici"]));
                }
                if ((ds.Tables["lokacija"] != null)) {
                    base.Tables.Add(new lokacijaDataTable(ds.Tables["lokacija"]));
                }
                if ((ds.Tables["putnik"] != null)) {
                    base.Tables.Add(new putnikDataTable(ds.Tables["putnik"]));
                }
                if ((ds.Tables["rezervacija"] != null)) {
                    base.Tables.Add(new rezervacijaDataTable(ds.Tables["rezervacija"]));
                }
                if ((ds.Tables["tura"] != null)) {
                    base.Tables.Add(new turaDataTable(ds.Tables["tura"]));
                }
                if ((ds.Tables["vozac"] != null)) {
                    base.Tables.Add(new vozacDataTable(ds.Tables["vozac"]));
                }
                if ((ds.Tables["vozilo"] != null)) {
                    base.Tables.Add(new voziloDataTable(ds.Tables["vozilo"]));
                }
                if ((ds.Tables["ture"] != null)) {
                    base.Tables.Add(new tureDataTable(ds.Tables["ture"]));
                }
                if ((ds.Tables["rezervacija_po_turi"] != null)) {
                    base.Tables.Add(new rezervacija_po_turiDataTable(ds.Tables["rezervacija_po_turi"]));
                }
                if ((ds.Tables["vozac_vozilo_po_turi"] != null)) {
                    base.Tables.Add(new vozac_vozilo_po_turiDataTable(ds.Tables["vozac_vozilo_po_turi"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablekorisnici = ((korisniciDataTable)(base.Tables["korisnici"]));
            if ((initTable == true)) {
                if ((this.tablekorisnici != null)) {
                    this.tablekorisnici.InitVars();
                }
            }
            this.tablelokacija = ((lokacijaDataTable)(base.Tables["lokacija"]));
            if ((initTable == true)) {
                if ((this.tablelokacija != null)) {
                    this.tablelokacija.InitVars();
                }
            }
            this.tableputnik = ((putnikDataTable)(base.Tables["putnik"]));
            if ((initTable == true)) {
                if ((this.tableputnik != null)) {
                    this.tableputnik.InitVars();
                }
            }
            this.tablerezervacija = ((rezervacijaDataTable)(base.Tables["rezervacija"]));
            if ((initTable == true)) {
                if ((this.tablerezervacija != null)) {
                    this.tablerezervacija.InitVars();
                }
            }
            this.tabletura = ((turaDataTable)(base.Tables["tura"]));
            if ((initTable == true)) {
                if ((this.tabletura != null)) {
                    this.tabletura.InitVars();
                }
            }
            this.tablevozac = ((vozacDataTable)(base.Tables["vozac"]));
            if ((initTable == true)) {
                if ((this.tablevozac != null)) {
                    this.tablevozac.InitVars();
                }
            }
            this.tablevozilo = ((voziloDataTable)(base.Tables["vozilo"]));
            if ((initTable == true)) {
                if ((this.tablevozilo != null)) {
                    this.tablevozilo.InitVars();
                }
            }
            this.tableture = ((tureDataTable)(base.Tables["ture"]));
            if ((initTable == true)) {
                if ((this.tableture != null)) {
                    this.tableture.InitVars();
                }
            }
            this.tablerezervacija_po_turi = ((rezervacija_po_turiDataTable)(base.Tables["rezervacija_po_turi"]));
            if ((initTable == true)) {
                if ((this.tablerezervacija_po_turi != null)) {
                    this.tablerezervacija_po_turi.InitVars();
                }
            }
            this.tablevozac_vozilo_po_turi = ((vozac_vozilo_po_turiDataTable)(base.Tables["vozac_vozilo_po_turi"]));
            if ((initTable == true)) {
                if ((this.tablevozac_vozilo_po_turi != null)) {
                    this.tablevozac_vozilo_po_turi.InitVars();
                }
            }
            this.relationfk_rezervacija_putnikID = this.Relations["fk_rezervacija_putnikID"];
            this.relationfk_rezervacija_turaID = this.Relations["fk_rezervacija_turaID"];
            this.relationfk_tura_startnalokacijaID = this.Relations["fk_tura_startnalokacijaID"];
            this.relationfk_tura_vozacID = this.Relations["fk_tura_vozacID"];
            this.relationfk_tura_voziloID = this.Relations["fk_tura_voziloID"];
            this.relationfk_tura_zavrsnalokacijaID = this.Relations["fk_tura_zavrsnalokacijaID"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "transport_menadzmentDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/transport_menadzmentDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablekorisnici = new korisniciDataTable();
            base.Tables.Add(this.tablekorisnici);
            this.tablelokacija = new lokacijaDataTable();
            base.Tables.Add(this.tablelokacija);
            this.tableputnik = new putnikDataTable();
            base.Tables.Add(this.tableputnik);
            this.tablerezervacija = new rezervacijaDataTable();
            base.Tables.Add(this.tablerezervacija);
            this.tabletura = new turaDataTable();
            base.Tables.Add(this.tabletura);
            this.tablevozac = new vozacDataTable();
            base.Tables.Add(this.tablevozac);
            this.tablevozilo = new voziloDataTable();
            base.Tables.Add(this.tablevozilo);
            this.tableture = new tureDataTable();
            base.Tables.Add(this.tableture);
            this.tablerezervacija_po_turi = new rezervacija_po_turiDataTable();
            base.Tables.Add(this.tablerezervacija_po_turi);
            this.tablevozac_vozilo_po_turi = new vozac_vozilo_po_turiDataTable();
            base.Tables.Add(this.tablevozac_vozilo_po_turi);
            this.relationfk_rezervacija_putnikID = new global::System.Data.DataRelation("fk_rezervacija_putnikID", new global::System.Data.DataColumn[] {
                        this.tableputnik.PutnikIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablerezervacija.PutnikIDColumn}, false);
            this.Relations.Add(this.relationfk_rezervacija_putnikID);
            this.relationfk_rezervacija_turaID = new global::System.Data.DataRelation("fk_rezervacija_turaID", new global::System.Data.DataColumn[] {
                        this.tabletura.TuraIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablerezervacija.TuraIDColumn}, false);
            this.Relations.Add(this.relationfk_rezervacija_turaID);
            this.relationfk_tura_startnalokacijaID = new global::System.Data.DataRelation("fk_tura_startnalokacijaID", new global::System.Data.DataColumn[] {
                        this.tablelokacija.LokacijaIDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletura.StartnaLokacijaIDColumn}, false);
            this.Relations.Add(this.relationfk_tura_startnalokacijaID);
            this.relationfk_tura_vozacID = new global::System.Data.DataRelation("fk_tura_vozacID", new global::System.Data.DataColumn[] {
                        this.tablevozac.VozacIDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletura.VozacIDColumn}, false);
            this.Relations.Add(this.relationfk_tura_vozacID);
            this.relationfk_tura_voziloID = new global::System.Data.DataRelation("fk_tura_voziloID", new global::System.Data.DataColumn[] {
                        this.tablevozilo.VoziloIDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletura.VoziloIDColumn}, false);
            this.Relations.Add(this.relationfk_tura_voziloID);
            this.relationfk_tura_zavrsnalokacijaID = new global::System.Data.DataRelation("fk_tura_zavrsnalokacijaID", new global::System.Data.DataColumn[] {
                        this.tablelokacija.LokacijaIDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletura.ZavrsnaLokacijaIDColumn}, false);
            this.Relations.Add(this.relationfk_tura_zavrsnalokacijaID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializekorisnici() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializelokacija() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeputnik() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializerezervacija() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializetura() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializevozac() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializevozilo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeture() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializerezervacija_po_turi() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializevozac_vozilo_po_turi() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void korisniciRowChangeEventHandler(object sender, korisniciRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void lokacijaRowChangeEventHandler(object sender, lokacijaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void putnikRowChangeEventHandler(object sender, putnikRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void rezervacijaRowChangeEventHandler(object sender, rezervacijaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void turaRowChangeEventHandler(object sender, turaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void vozacRowChangeEventHandler(object sender, vozacRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void voziloRowChangeEventHandler(object sender, voziloRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void tureRowChangeEventHandler(object sender, tureRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void rezervacija_po_turiRowChangeEventHandler(object sender, rezervacija_po_turiRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void vozac_vozilo_po_turiRowChangeEventHandler(object sender, vozac_vozilo_po_turiRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class korisniciDataTable : global::System.Data.TypedTableBase<korisniciRow> {
            
            private global::System.Data.DataColumn columnkorisnik_id;
            
            private global::System.Data.DataColumn columnkorisnik;
            
            private global::System.Data.DataColumn columnlozinka;
            
            private global::System.Data.DataColumn columnnivo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public korisniciDataTable() {
                this.TableName = "korisnici";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal korisniciDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected korisniciDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn korisnik_idColumn {
                get {
                    return this.columnkorisnik_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn korisnikColumn {
                get {
                    return this.columnkorisnik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn lozinkaColumn {
                get {
                    return this.columnlozinka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nivoColumn {
                get {
                    return this.columnnivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public korisniciRow this[int index] {
                get {
                    return ((korisniciRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event korisniciRowChangeEventHandler korisniciRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event korisniciRowChangeEventHandler korisniciRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event korisniciRowChangeEventHandler korisniciRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event korisniciRowChangeEventHandler korisniciRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddkorisniciRow(korisniciRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public korisniciRow AddkorisniciRow(string korisnik, string lozinka, string nivo) {
                korisniciRow rowkorisniciRow = ((korisniciRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        korisnik,
                        lozinka,
                        nivo};
                rowkorisniciRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowkorisniciRow);
                return rowkorisniciRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public korisniciRow FindBykorisnik_id(int korisnik_id) {
                return ((korisniciRow)(this.Rows.Find(new object[] {
                            korisnik_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                korisniciDataTable cln = ((korisniciDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new korisniciDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnkorisnik_id = base.Columns["korisnik_id"];
                this.columnkorisnik = base.Columns["korisnik"];
                this.columnlozinka = base.Columns["lozinka"];
                this.columnnivo = base.Columns["nivo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnkorisnik_id = new global::System.Data.DataColumn("korisnik_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkorisnik_id);
                this.columnkorisnik = new global::System.Data.DataColumn("korisnik", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkorisnik);
                this.columnlozinka = new global::System.Data.DataColumn("lozinka", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlozinka);
                this.columnnivo = new global::System.Data.DataColumn("nivo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnivo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnkorisnik}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnkorisnik_id}, true));
                this.columnkorisnik_id.AutoIncrement = true;
                this.columnkorisnik_id.AutoIncrementSeed = -1;
                this.columnkorisnik_id.AutoIncrementStep = -1;
                this.columnkorisnik_id.AllowDBNull = false;
                this.columnkorisnik_id.Unique = true;
                this.columnkorisnik.AllowDBNull = false;
                this.columnkorisnik.Unique = true;
                this.columnlozinka.AllowDBNull = false;
                this.columnnivo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public korisniciRow NewkorisniciRow() {
                return ((korisniciRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new korisniciRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(korisniciRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.korisniciRowChanged != null)) {
                    this.korisniciRowChanged(this, new korisniciRowChangeEvent(((korisniciRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.korisniciRowChanging != null)) {
                    this.korisniciRowChanging(this, new korisniciRowChangeEvent(((korisniciRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.korisniciRowDeleted != null)) {
                    this.korisniciRowDeleted(this, new korisniciRowChangeEvent(((korisniciRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.korisniciRowDeleting != null)) {
                    this.korisniciRowDeleting(this, new korisniciRowChangeEvent(((korisniciRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovekorisniciRow(korisniciRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "korisniciDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lokacijaDataTable : global::System.Data.TypedTableBase<lokacijaRow> {
            
            private global::System.Data.DataColumn columnLokacijaID;
            
            private global::System.Data.DataColumn columnGrad;
            
            private global::System.Data.DataColumn columnNaziv;
            
            private global::System.Data.DataColumn columnAdresa;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public lokacijaDataTable() {
                this.TableName = "lokacija";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal lokacijaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected lokacijaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LokacijaIDColumn {
                get {
                    return this.columnLokacijaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GradColumn {
                get {
                    return this.columnGrad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NazivColumn {
                get {
                    return this.columnNaziv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AdresaColumn {
                get {
                    return this.columnAdresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public lokacijaRow this[int index] {
                get {
                    return ((lokacijaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event lokacijaRowChangeEventHandler lokacijaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event lokacijaRowChangeEventHandler lokacijaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event lokacijaRowChangeEventHandler lokacijaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event lokacijaRowChangeEventHandler lokacijaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddlokacijaRow(lokacijaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public lokacijaRow AddlokacijaRow(string Grad, string Naziv, string Adresa) {
                lokacijaRow rowlokacijaRow = ((lokacijaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Grad,
                        Naziv,
                        Adresa};
                rowlokacijaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlokacijaRow);
                return rowlokacijaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public lokacijaRow FindByLokacijaID(int LokacijaID) {
                return ((lokacijaRow)(this.Rows.Find(new object[] {
                            LokacijaID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                lokacijaDataTable cln = ((lokacijaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lokacijaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnLokacijaID = base.Columns["LokacijaID"];
                this.columnGrad = base.Columns["Grad"];
                this.columnNaziv = base.Columns["Naziv"];
                this.columnAdresa = base.Columns["Adresa"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnLokacijaID = new global::System.Data.DataColumn("LokacijaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLokacijaID);
                this.columnGrad = new global::System.Data.DataColumn("Grad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrad);
                this.columnNaziv = new global::System.Data.DataColumn("Naziv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaziv);
                this.columnAdresa = new global::System.Data.DataColumn("Adresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresa);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLokacijaID}, true));
                this.columnLokacijaID.AutoIncrement = true;
                this.columnLokacijaID.AutoIncrementSeed = -1;
                this.columnLokacijaID.AutoIncrementStep = -1;
                this.columnLokacijaID.AllowDBNull = false;
                this.columnLokacijaID.Unique = true;
                this.columnGrad.AllowDBNull = false;
                this.columnNaziv.AllowDBNull = false;
                this.columnAdresa.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public lokacijaRow NewlokacijaRow() {
                return ((lokacijaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lokacijaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(lokacijaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lokacijaRowChanged != null)) {
                    this.lokacijaRowChanged(this, new lokacijaRowChangeEvent(((lokacijaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lokacijaRowChanging != null)) {
                    this.lokacijaRowChanging(this, new lokacijaRowChangeEvent(((lokacijaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lokacijaRowDeleted != null)) {
                    this.lokacijaRowDeleted(this, new lokacijaRowChangeEvent(((lokacijaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lokacijaRowDeleting != null)) {
                    this.lokacijaRowDeleting(this, new lokacijaRowChangeEvent(((lokacijaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovelokacijaRow(lokacijaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lokacijaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class putnikDataTable : global::System.Data.TypedTableBase<putnikRow> {
            
            private global::System.Data.DataColumn columnPutnikID;
            
            private global::System.Data.DataColumn columnIme;
            
            private global::System.Data.DataColumn columnPrezime;
            
            private global::System.Data.DataColumn columnAdresa;
            
            private global::System.Data.DataColumn columntelefon;
            
            private global::System.Data.DataColumn columnGodine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public putnikDataTable() {
                this.TableName = "putnik";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal putnikDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected putnikDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PutnikIDColumn {
                get {
                    return this.columnPutnikID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ImeColumn {
                get {
                    return this.columnIme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PrezimeColumn {
                get {
                    return this.columnPrezime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AdresaColumn {
                get {
                    return this.columnAdresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn telefonColumn {
                get {
                    return this.columntelefon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GodineColumn {
                get {
                    return this.columnGodine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public putnikRow this[int index] {
                get {
                    return ((putnikRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event putnikRowChangeEventHandler putnikRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event putnikRowChangeEventHandler putnikRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event putnikRowChangeEventHandler putnikRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event putnikRowChangeEventHandler putnikRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddputnikRow(putnikRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public putnikRow AddputnikRow(string Ime, string Prezime, string Adresa, string telefon, int Godine) {
                putnikRow rowputnikRow = ((putnikRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Ime,
                        Prezime,
                        Adresa,
                        telefon,
                        Godine};
                rowputnikRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowputnikRow);
                return rowputnikRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public putnikRow FindByPutnikID(int PutnikID) {
                return ((putnikRow)(this.Rows.Find(new object[] {
                            PutnikID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                putnikDataTable cln = ((putnikDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new putnikDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnPutnikID = base.Columns["PutnikID"];
                this.columnIme = base.Columns["Ime"];
                this.columnPrezime = base.Columns["Prezime"];
                this.columnAdresa = base.Columns["Adresa"];
                this.columntelefon = base.Columns["telefon"];
                this.columnGodine = base.Columns["Godine"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnPutnikID = new global::System.Data.DataColumn("PutnikID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutnikID);
                this.columnIme = new global::System.Data.DataColumn("Ime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIme);
                this.columnPrezime = new global::System.Data.DataColumn("Prezime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrezime);
                this.columnAdresa = new global::System.Data.DataColumn("Adresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresa);
                this.columntelefon = new global::System.Data.DataColumn("telefon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelefon);
                this.columnGodine = new global::System.Data.DataColumn("Godine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodine);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPutnikID}, true));
                this.columnPutnikID.AutoIncrement = true;
                this.columnPutnikID.AutoIncrementSeed = -1;
                this.columnPutnikID.AutoIncrementStep = -1;
                this.columnPutnikID.AllowDBNull = false;
                this.columnPutnikID.Unique = true;
                this.columnIme.AllowDBNull = false;
                this.columnPrezime.AllowDBNull = false;
                this.columnAdresa.AllowDBNull = false;
                this.columntelefon.AllowDBNull = false;
                this.columnGodine.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public putnikRow NewputnikRow() {
                return ((putnikRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new putnikRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(putnikRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.putnikRowChanged != null)) {
                    this.putnikRowChanged(this, new putnikRowChangeEvent(((putnikRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.putnikRowChanging != null)) {
                    this.putnikRowChanging(this, new putnikRowChangeEvent(((putnikRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.putnikRowDeleted != null)) {
                    this.putnikRowDeleted(this, new putnikRowChangeEvent(((putnikRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.putnikRowDeleting != null)) {
                    this.putnikRowDeleting(this, new putnikRowChangeEvent(((putnikRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveputnikRow(putnikRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "putnikDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rezervacijaDataTable : global::System.Data.TypedTableBase<rezervacijaRow> {
            
            private global::System.Data.DataColumn columnRezervacijaID;
            
            private global::System.Data.DataColumn columnCena;
            
            private global::System.Data.DataColumn columnKreiranaAt;
            
            private global::System.Data.DataColumn columnPovratna;
            
            private global::System.Data.DataColumn columnPutnikID;
            
            private global::System.Data.DataColumn columnTuraID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacijaDataTable() {
                this.TableName = "rezervacija";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal rezervacijaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected rezervacijaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RezervacijaIDColumn {
                get {
                    return this.columnRezervacijaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CenaColumn {
                get {
                    return this.columnCena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KreiranaAtColumn {
                get {
                    return this.columnKreiranaAt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PovratnaColumn {
                get {
                    return this.columnPovratna;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PutnikIDColumn {
                get {
                    return this.columnPutnikID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TuraIDColumn {
                get {
                    return this.columnTuraID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacijaRow this[int index] {
                get {
                    return ((rezervacijaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rezervacijaRowChangeEventHandler rezervacijaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rezervacijaRowChangeEventHandler rezervacijaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rezervacijaRowChangeEventHandler rezervacijaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rezervacijaRowChangeEventHandler rezervacijaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddrezervacijaRow(rezervacijaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacijaRow AddrezervacijaRow(string Cena, System.DateTime KreiranaAt, string Povratna, putnikRow parentputnikRowByfk_rezervacija_putnikID, turaRow parentturaRowByfk_rezervacija_turaID) {
                rezervacijaRow rowrezervacijaRow = ((rezervacijaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Cena,
                        KreiranaAt,
                        Povratna,
                        null,
                        null};
                if ((parentputnikRowByfk_rezervacija_putnikID != null)) {
                    columnValuesArray[4] = parentputnikRowByfk_rezervacija_putnikID[0];
                }
                if ((parentturaRowByfk_rezervacija_turaID != null)) {
                    columnValuesArray[5] = parentturaRowByfk_rezervacija_turaID[0];
                }
                rowrezervacijaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrezervacijaRow);
                return rowrezervacijaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacijaRow FindByRezervacijaID(int RezervacijaID) {
                return ((rezervacijaRow)(this.Rows.Find(new object[] {
                            RezervacijaID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rezervacijaDataTable cln = ((rezervacijaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rezervacijaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnRezervacijaID = base.Columns["RezervacijaID"];
                this.columnCena = base.Columns["Cena"];
                this.columnKreiranaAt = base.Columns["KreiranaAt"];
                this.columnPovratna = base.Columns["Povratna"];
                this.columnPutnikID = base.Columns["PutnikID"];
                this.columnTuraID = base.Columns["TuraID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnRezervacijaID = new global::System.Data.DataColumn("RezervacijaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRezervacijaID);
                this.columnCena = new global::System.Data.DataColumn("Cena", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCena);
                this.columnKreiranaAt = new global::System.Data.DataColumn("KreiranaAt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKreiranaAt);
                this.columnPovratna = new global::System.Data.DataColumn("Povratna", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPovratna);
                this.columnPutnikID = new global::System.Data.DataColumn("PutnikID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPutnikID);
                this.columnTuraID = new global::System.Data.DataColumn("TuraID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTuraID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRezervacijaID}, true));
                this.columnRezervacijaID.AutoIncrement = true;
                this.columnRezervacijaID.AutoIncrementSeed = -1;
                this.columnRezervacijaID.AutoIncrementStep = -1;
                this.columnRezervacijaID.AllowDBNull = false;
                this.columnRezervacijaID.Unique = true;
                this.columnCena.AllowDBNull = false;
                this.columnKreiranaAt.AllowDBNull = false;
                this.columnPovratna.AllowDBNull = false;
                this.columnPutnikID.AllowDBNull = false;
                this.columnTuraID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacijaRow NewrezervacijaRow() {
                return ((rezervacijaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rezervacijaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rezervacijaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rezervacijaRowChanged != null)) {
                    this.rezervacijaRowChanged(this, new rezervacijaRowChangeEvent(((rezervacijaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rezervacijaRowChanging != null)) {
                    this.rezervacijaRowChanging(this, new rezervacijaRowChangeEvent(((rezervacijaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rezervacijaRowDeleted != null)) {
                    this.rezervacijaRowDeleted(this, new rezervacijaRowChangeEvent(((rezervacijaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rezervacijaRowDeleting != null)) {
                    this.rezervacijaRowDeleting(this, new rezervacijaRowChangeEvent(((rezervacijaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoverezervacijaRow(rezervacijaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rezervacijaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class turaDataTable : global::System.Data.TypedTableBase<turaRow> {
            
            private global::System.Data.DataColumn columnTuraID;
            
            private global::System.Data.DataColumn columnDatumPolaska;
            
            private global::System.Data.DataColumn columnVremeUkrcavanja;
            
            private global::System.Data.DataColumn columnVremePolaska;
            
            private global::System.Data.DataColumn columnDatumStizanja;
            
            private global::System.Data.DataColumn columnVremeStizanja;
            
            private global::System.Data.DataColumn columnVoziloID;
            
            private global::System.Data.DataColumn columnVozacID;
            
            private global::System.Data.DataColumn columnStartnaLokacijaID;
            
            private global::System.Data.DataColumn columnZavrsnaLokacijaID;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaDataTable() {
                this.TableName = "tura";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal turaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected turaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TuraIDColumn {
                get {
                    return this.columnTuraID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DatumPolaskaColumn {
                get {
                    return this.columnDatumPolaska;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VremeUkrcavanjaColumn {
                get {
                    return this.columnVremeUkrcavanja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VremePolaskaColumn {
                get {
                    return this.columnVremePolaska;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DatumStizanjaColumn {
                get {
                    return this.columnDatumStizanja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VremeStizanjaColumn {
                get {
                    return this.columnVremeStizanja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VoziloIDColumn {
                get {
                    return this.columnVoziloID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VozacIDColumn {
                get {
                    return this.columnVozacID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StartnaLokacijaIDColumn {
                get {
                    return this.columnStartnaLokacijaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ZavrsnaLokacijaIDColumn {
                get {
                    return this.columnZavrsnaLokacijaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow this[int index] {
                get {
                    return ((turaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event turaRowChangeEventHandler turaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event turaRowChangeEventHandler turaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event turaRowChangeEventHandler turaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event turaRowChangeEventHandler turaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddturaRow(turaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow AddturaRow(System.DateTime DatumPolaska, System.TimeSpan VremeUkrcavanja, System.TimeSpan VremePolaska, System.DateTime DatumStizanja, System.TimeSpan VremeStizanja, voziloRow parentvoziloRowByfk_tura_voziloID, vozacRow parentvozacRowByfk_tura_vozacID, lokacijaRow parentlokacijaRowByfk_tura_startnalokacijaID, lokacijaRow parentlokacijaRowByfk_tura_zavrsnalokacijaID, string Status) {
                turaRow rowturaRow = ((turaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DatumPolaska,
                        VremeUkrcavanja,
                        VremePolaska,
                        DatumStizanja,
                        VremeStizanja,
                        null,
                        null,
                        null,
                        null,
                        Status};
                if ((parentvoziloRowByfk_tura_voziloID != null)) {
                    columnValuesArray[6] = parentvoziloRowByfk_tura_voziloID[0];
                }
                if ((parentvozacRowByfk_tura_vozacID != null)) {
                    columnValuesArray[7] = parentvozacRowByfk_tura_vozacID[0];
                }
                if ((parentlokacijaRowByfk_tura_startnalokacijaID != null)) {
                    columnValuesArray[8] = parentlokacijaRowByfk_tura_startnalokacijaID[0];
                }
                if ((parentlokacijaRowByfk_tura_zavrsnalokacijaID != null)) {
                    columnValuesArray[9] = parentlokacijaRowByfk_tura_zavrsnalokacijaID[0];
                }
                rowturaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowturaRow);
                return rowturaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow FindByTuraID(int TuraID) {
                return ((turaRow)(this.Rows.Find(new object[] {
                            TuraID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                turaDataTable cln = ((turaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new turaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnTuraID = base.Columns["TuraID"];
                this.columnDatumPolaska = base.Columns["DatumPolaska"];
                this.columnVremeUkrcavanja = base.Columns["VremeUkrcavanja"];
                this.columnVremePolaska = base.Columns["VremePolaska"];
                this.columnDatumStizanja = base.Columns["DatumStizanja"];
                this.columnVremeStizanja = base.Columns["VremeStizanja"];
                this.columnVoziloID = base.Columns["VoziloID"];
                this.columnVozacID = base.Columns["VozacID"];
                this.columnStartnaLokacijaID = base.Columns["StartnaLokacijaID"];
                this.columnZavrsnaLokacijaID = base.Columns["ZavrsnaLokacijaID"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnTuraID = new global::System.Data.DataColumn("TuraID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTuraID);
                this.columnDatumPolaska = new global::System.Data.DataColumn("DatumPolaska", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumPolaska);
                this.columnVremeUkrcavanja = new global::System.Data.DataColumn("VremeUkrcavanja", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVremeUkrcavanja);
                this.columnVremePolaska = new global::System.Data.DataColumn("VremePolaska", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVremePolaska);
                this.columnDatumStizanja = new global::System.Data.DataColumn("DatumStizanja", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumStizanja);
                this.columnVremeStizanja = new global::System.Data.DataColumn("VremeStizanja", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVremeStizanja);
                this.columnVoziloID = new global::System.Data.DataColumn("VoziloID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoziloID);
                this.columnVozacID = new global::System.Data.DataColumn("VozacID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVozacID);
                this.columnStartnaLokacijaID = new global::System.Data.DataColumn("StartnaLokacijaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartnaLokacijaID);
                this.columnZavrsnaLokacijaID = new global::System.Data.DataColumn("ZavrsnaLokacijaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZavrsnaLokacijaID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTuraID}, true));
                this.columnTuraID.AutoIncrement = true;
                this.columnTuraID.AutoIncrementSeed = -1;
                this.columnTuraID.AutoIncrementStep = -1;
                this.columnTuraID.AllowDBNull = false;
                this.columnTuraID.Unique = true;
                this.columnDatumPolaska.AllowDBNull = false;
                this.columnVremeUkrcavanja.AllowDBNull = false;
                this.columnVremePolaska.AllowDBNull = false;
                this.columnDatumStizanja.AllowDBNull = false;
                this.columnVremeStizanja.AllowDBNull = false;
                this.columnVoziloID.AllowDBNull = false;
                this.columnVozacID.AllowDBNull = false;
                this.columnStartnaLokacijaID.AllowDBNull = false;
                this.columnZavrsnaLokacijaID.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow NewturaRow() {
                return ((turaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new turaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(turaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.turaRowChanged != null)) {
                    this.turaRowChanged(this, new turaRowChangeEvent(((turaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.turaRowChanging != null)) {
                    this.turaRowChanging(this, new turaRowChangeEvent(((turaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.turaRowDeleted != null)) {
                    this.turaRowDeleted(this, new turaRowChangeEvent(((turaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.turaRowDeleting != null)) {
                    this.turaRowDeleting(this, new turaRowChangeEvent(((turaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveturaRow(turaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "turaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vozacDataTable : global::System.Data.TypedTableBase<vozacRow> {
            
            private global::System.Data.DataColumn columnVozacID;
            
            private global::System.Data.DataColumn columnIme;
            
            private global::System.Data.DataColumn columnGodine;
            
            private global::System.Data.DataColumn columnTelefon;
            
            private global::System.Data.DataColumn columnKategorija;
            
            private global::System.Data.DataColumn columnZaposljenAt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozacDataTable() {
                this.TableName = "vozac";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal vozacDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected vozacDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VozacIDColumn {
                get {
                    return this.columnVozacID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ImeColumn {
                get {
                    return this.columnIme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GodineColumn {
                get {
                    return this.columnGodine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TelefonColumn {
                get {
                    return this.columnTelefon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KategorijaColumn {
                get {
                    return this.columnKategorija;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ZaposljenAtColumn {
                get {
                    return this.columnZaposljenAt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozacRow this[int index] {
                get {
                    return ((vozacRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vozacRowChangeEventHandler vozacRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vozacRowChangeEventHandler vozacRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vozacRowChangeEventHandler vozacRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vozacRowChangeEventHandler vozacRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddvozacRow(vozacRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozacRow AddvozacRow(string Ime, string Godine, string Telefon, string Kategorija, System.DateTime ZaposljenAt) {
                vozacRow rowvozacRow = ((vozacRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Ime,
                        Godine,
                        Telefon,
                        Kategorija,
                        ZaposljenAt};
                rowvozacRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvozacRow);
                return rowvozacRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozacRow FindByVozacID(int VozacID) {
                return ((vozacRow)(this.Rows.Find(new object[] {
                            VozacID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                vozacDataTable cln = ((vozacDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vozacDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnVozacID = base.Columns["VozacID"];
                this.columnIme = base.Columns["Ime"];
                this.columnGodine = base.Columns["Godine"];
                this.columnTelefon = base.Columns["Telefon"];
                this.columnKategorija = base.Columns["Kategorija"];
                this.columnZaposljenAt = base.Columns["ZaposljenAt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnVozacID = new global::System.Data.DataColumn("VozacID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVozacID);
                this.columnIme = new global::System.Data.DataColumn("Ime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIme);
                this.columnGodine = new global::System.Data.DataColumn("Godine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodine);
                this.columnTelefon = new global::System.Data.DataColumn("Telefon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefon);
                this.columnKategorija = new global::System.Data.DataColumn("Kategorija", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKategorija);
                this.columnZaposljenAt = new global::System.Data.DataColumn("ZaposljenAt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZaposljenAt);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVozacID}, true));
                this.columnVozacID.AutoIncrement = true;
                this.columnVozacID.AutoIncrementSeed = -1;
                this.columnVozacID.AutoIncrementStep = -1;
                this.columnVozacID.AllowDBNull = false;
                this.columnVozacID.Unique = true;
                this.columnIme.AllowDBNull = false;
                this.columnGodine.AllowDBNull = false;
                this.columnTelefon.AllowDBNull = false;
                this.columnKategorija.AllowDBNull = false;
                this.columnZaposljenAt.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozacRow NewvozacRow() {
                return ((vozacRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vozacRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(vozacRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vozacRowChanged != null)) {
                    this.vozacRowChanged(this, new vozacRowChangeEvent(((vozacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vozacRowChanging != null)) {
                    this.vozacRowChanging(this, new vozacRowChangeEvent(((vozacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vozacRowDeleted != null)) {
                    this.vozacRowDeleted(this, new vozacRowChangeEvent(((vozacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vozacRowDeleting != null)) {
                    this.vozacRowDeleting(this, new vozacRowChangeEvent(((vozacRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovevozacRow(vozacRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vozacDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class voziloDataTable : global::System.Data.TypedTableBase<voziloRow> {
            
            private global::System.Data.DataColumn columnVoziloID;
            
            private global::System.Data.DataColumn columnBrend;
            
            private global::System.Data.DataColumn columnTip;
            
            private global::System.Data.DataColumn columnBoja;
            
            private global::System.Data.DataColumn columnBrojSedista;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public voziloDataTable() {
                this.TableName = "vozilo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal voziloDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected voziloDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VoziloIDColumn {
                get {
                    return this.columnVoziloID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BrendColumn {
                get {
                    return this.columnBrend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TipColumn {
                get {
                    return this.columnTip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BojaColumn {
                get {
                    return this.columnBoja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BrojSedistaColumn {
                get {
                    return this.columnBrojSedista;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public voziloRow this[int index] {
                get {
                    return ((voziloRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event voziloRowChangeEventHandler voziloRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event voziloRowChangeEventHandler voziloRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event voziloRowChangeEventHandler voziloRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event voziloRowChangeEventHandler voziloRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddvoziloRow(voziloRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public voziloRow AddvoziloRow(string Brend, string Tip, string Boja, int BrojSedista) {
                voziloRow rowvoziloRow = ((voziloRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Brend,
                        Tip,
                        Boja,
                        BrojSedista};
                rowvoziloRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvoziloRow);
                return rowvoziloRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public voziloRow FindByVoziloID(int VoziloID) {
                return ((voziloRow)(this.Rows.Find(new object[] {
                            VoziloID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                voziloDataTable cln = ((voziloDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new voziloDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnVoziloID = base.Columns["VoziloID"];
                this.columnBrend = base.Columns["Brend"];
                this.columnTip = base.Columns["Tip"];
                this.columnBoja = base.Columns["Boja"];
                this.columnBrojSedista = base.Columns["BrojSedista"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnVoziloID = new global::System.Data.DataColumn("VoziloID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoziloID);
                this.columnBrend = new global::System.Data.DataColumn("Brend", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrend);
                this.columnTip = new global::System.Data.DataColumn("Tip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTip);
                this.columnBoja = new global::System.Data.DataColumn("Boja", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoja);
                this.columnBrojSedista = new global::System.Data.DataColumn("BrojSedista", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrojSedista);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVoziloID}, true));
                this.columnVoziloID.AutoIncrement = true;
                this.columnVoziloID.AutoIncrementSeed = -1;
                this.columnVoziloID.AutoIncrementStep = -1;
                this.columnVoziloID.AllowDBNull = false;
                this.columnVoziloID.Unique = true;
                this.columnBrend.AllowDBNull = false;
                this.columnTip.AllowDBNull = false;
                this.columnBoja.AllowDBNull = false;
                this.columnBrojSedista.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public voziloRow NewvoziloRow() {
                return ((voziloRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new voziloRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(voziloRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.voziloRowChanged != null)) {
                    this.voziloRowChanged(this, new voziloRowChangeEvent(((voziloRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.voziloRowChanging != null)) {
                    this.voziloRowChanging(this, new voziloRowChangeEvent(((voziloRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.voziloRowDeleted != null)) {
                    this.voziloRowDeleted(this, new voziloRowChangeEvent(((voziloRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.voziloRowDeleting != null)) {
                    this.voziloRowDeleting(this, new voziloRowChangeEvent(((voziloRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovevoziloRow(voziloRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "voziloDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tureDataTable : global::System.Data.TypedTableBase<tureRow> {
            
            private global::System.Data.DataColumn columnTuraID;
            
            private global::System.Data.DataColumn columnDatum_polaska;
            
            private global::System.Data.DataColumn columnVreme_ukrcavanja;
            
            private global::System.Data.DataColumn columnVreme_polaska;
            
            private global::System.Data.DataColumn columnDatum_stizanja;
            
            private global::System.Data.DataColumn columnVreme_stizanja;
            
            private global::System.Data.DataColumn columnStartna_lokacija;
            
            private global::System.Data.DataColumn columnZavrsna_lokacija;
            
            private global::System.Data.DataColumn columnIme_vozaca;
            
            private global::System.Data.DataColumn columnTip_vozila;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tureDataTable() {
                this.TableName = "ture";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal tureDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected tureDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TuraIDColumn {
                get {
                    return this.columnTuraID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Datum_polaskaColumn {
                get {
                    return this.columnDatum_polaska;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Vreme_ukrcavanjaColumn {
                get {
                    return this.columnVreme_ukrcavanja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Vreme_polaskaColumn {
                get {
                    return this.columnVreme_polaska;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Datum_stizanjaColumn {
                get {
                    return this.columnDatum_stizanja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Vreme_stizanjaColumn {
                get {
                    return this.columnVreme_stizanja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Startna_lokacijaColumn {
                get {
                    return this.columnStartna_lokacija;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Zavrsna_lokacijaColumn {
                get {
                    return this.columnZavrsna_lokacija;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Ime_vozacaColumn {
                get {
                    return this.columnIme_vozaca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tip_vozilaColumn {
                get {
                    return this.columnTip_vozila;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tureRow this[int index] {
                get {
                    return ((tureRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tureRowChangeEventHandler tureRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tureRowChangeEventHandler tureRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tureRowChangeEventHandler tureRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event tureRowChangeEventHandler tureRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddtureRow(tureRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tureRow AddtureRow(System.DateTime Datum_polaska, System.TimeSpan Vreme_ukrcavanja, System.TimeSpan Vreme_polaska, System.DateTime Datum_stizanja, System.TimeSpan Vreme_stizanja, string Startna_lokacija, string Zavrsna_lokacija, string Ime_vozaca, string Tip_vozila, string Status) {
                tureRow rowtureRow = ((tureRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Datum_polaska,
                        Vreme_ukrcavanja,
                        Vreme_polaska,
                        Datum_stizanja,
                        Vreme_stizanja,
                        Startna_lokacija,
                        Zavrsna_lokacija,
                        Ime_vozaca,
                        Tip_vozila,
                        Status};
                rowtureRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtureRow);
                return rowtureRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tureRow FindByTuraID(int TuraID) {
                return ((tureRow)(this.Rows.Find(new object[] {
                            TuraID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tureDataTable cln = ((tureDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tureDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnTuraID = base.Columns["TuraID"];
                this.columnDatum_polaska = base.Columns["Datum polaska"];
                this.columnVreme_ukrcavanja = base.Columns["Vreme ukrcavanja"];
                this.columnVreme_polaska = base.Columns["Vreme polaska"];
                this.columnDatum_stizanja = base.Columns["Datum stizanja"];
                this.columnVreme_stizanja = base.Columns["Vreme stizanja"];
                this.columnStartna_lokacija = base.Columns["Startna lokacija"];
                this.columnZavrsna_lokacija = base.Columns["Zavrsna lokacija"];
                this.columnIme_vozaca = base.Columns["Ime vozaca"];
                this.columnTip_vozila = base.Columns["Tip vozila"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnTuraID = new global::System.Data.DataColumn("TuraID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTuraID);
                this.columnDatum_polaska = new global::System.Data.DataColumn("Datum polaska", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatum_polaska);
                this.columnVreme_ukrcavanja = new global::System.Data.DataColumn("Vreme ukrcavanja", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVreme_ukrcavanja);
                this.columnVreme_polaska = new global::System.Data.DataColumn("Vreme polaska", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVreme_polaska);
                this.columnDatum_stizanja = new global::System.Data.DataColumn("Datum stizanja", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatum_stizanja);
                this.columnVreme_stizanja = new global::System.Data.DataColumn("Vreme stizanja", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVreme_stizanja);
                this.columnStartna_lokacija = new global::System.Data.DataColumn("Startna lokacija", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartna_lokacija);
                this.columnZavrsna_lokacija = new global::System.Data.DataColumn("Zavrsna lokacija", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZavrsna_lokacija);
                this.columnIme_vozaca = new global::System.Data.DataColumn("Ime vozaca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIme_vozaca);
                this.columnTip_vozila = new global::System.Data.DataColumn("Tip vozila", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTip_vozila);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTuraID}, true));
                this.columnTuraID.AutoIncrement = true;
                this.columnTuraID.AutoIncrementSeed = -1;
                this.columnTuraID.AutoIncrementStep = -1;
                this.columnTuraID.AllowDBNull = false;
                this.columnTuraID.Unique = true;
                this.columnDatum_polaska.AllowDBNull = false;
                this.columnVreme_ukrcavanja.AllowDBNull = false;
                this.columnVreme_polaska.AllowDBNull = false;
                this.columnDatum_stizanja.AllowDBNull = false;
                this.columnVreme_stizanja.AllowDBNull = false;
                this.columnStartna_lokacija.AllowDBNull = false;
                this.columnZavrsna_lokacija.AllowDBNull = false;
                this.columnIme_vozaca.AllowDBNull = false;
                this.columnTip_vozila.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tureRow NewtureRow() {
                return ((tureRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tureRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tureRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tureRowChanged != null)) {
                    this.tureRowChanged(this, new tureRowChangeEvent(((tureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tureRowChanging != null)) {
                    this.tureRowChanging(this, new tureRowChangeEvent(((tureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tureRowDeleted != null)) {
                    this.tureRowDeleted(this, new tureRowChangeEvent(((tureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tureRowDeleting != null)) {
                    this.tureRowDeleting(this, new tureRowChangeEvent(((tureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovetureRow(tureRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tureDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rezervacija_po_turiDataTable : global::System.Data.TypedTableBase<rezervacija_po_turiRow> {
            
            private global::System.Data.DataColumn columnRezervacijaID;
            
            private global::System.Data.DataColumn columnIme;
            
            private global::System.Data.DataColumn columnPrezime;
            
            private global::System.Data.DataColumn columnBroj_telefona;
            
            private global::System.Data.DataColumn columnCena_karte;
            
            private global::System.Data.DataColumn columnPovratna_karta;
            
            private global::System.Data.DataColumn columnVreme_ukrcavanja;
            
            private global::System.Data.DataColumn columnDestinacija;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacija_po_turiDataTable() {
                this.TableName = "rezervacija_po_turi";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal rezervacija_po_turiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected rezervacija_po_turiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RezervacijaIDColumn {
                get {
                    return this.columnRezervacijaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ImeColumn {
                get {
                    return this.columnIme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PrezimeColumn {
                get {
                    return this.columnPrezime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Broj_telefonaColumn {
                get {
                    return this.columnBroj_telefona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Cena_karteColumn {
                get {
                    return this.columnCena_karte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Povratna_kartaColumn {
                get {
                    return this.columnPovratna_karta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Vreme_ukrcavanjaColumn {
                get {
                    return this.columnVreme_ukrcavanja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DestinacijaColumn {
                get {
                    return this.columnDestinacija;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacija_po_turiRow this[int index] {
                get {
                    return ((rezervacija_po_turiRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rezervacija_po_turiRowChangeEventHandler rezervacija_po_turiRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rezervacija_po_turiRowChangeEventHandler rezervacija_po_turiRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rezervacija_po_turiRowChangeEventHandler rezervacija_po_turiRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event rezervacija_po_turiRowChangeEventHandler rezervacija_po_turiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addrezervacija_po_turiRow(rezervacija_po_turiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacija_po_turiRow Addrezervacija_po_turiRow(string Ime, string Prezime, string Broj_telefona, string Cena_karte, string Povratna_karta, System.TimeSpan Vreme_ukrcavanja, string Destinacija) {
                rezervacija_po_turiRow rowrezervacija_po_turiRow = ((rezervacija_po_turiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Ime,
                        Prezime,
                        Broj_telefona,
                        Cena_karte,
                        Povratna_karta,
                        Vreme_ukrcavanja,
                        Destinacija};
                rowrezervacija_po_turiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrezervacija_po_turiRow);
                return rowrezervacija_po_turiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacija_po_turiRow FindByRezervacijaID(int RezervacijaID) {
                return ((rezervacija_po_turiRow)(this.Rows.Find(new object[] {
                            RezervacijaID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rezervacija_po_turiDataTable cln = ((rezervacija_po_turiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rezervacija_po_turiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnRezervacijaID = base.Columns["RezervacijaID"];
                this.columnIme = base.Columns["Ime"];
                this.columnPrezime = base.Columns["Prezime"];
                this.columnBroj_telefona = base.Columns["Broj telefona"];
                this.columnCena_karte = base.Columns["Cena karte"];
                this.columnPovratna_karta = base.Columns["Povratna karta"];
                this.columnVreme_ukrcavanja = base.Columns["Vreme ukrcavanja"];
                this.columnDestinacija = base.Columns["Destinacija"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnRezervacijaID = new global::System.Data.DataColumn("RezervacijaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRezervacijaID);
                this.columnIme = new global::System.Data.DataColumn("Ime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIme);
                this.columnPrezime = new global::System.Data.DataColumn("Prezime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrezime);
                this.columnBroj_telefona = new global::System.Data.DataColumn("Broj telefona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBroj_telefona);
                this.columnCena_karte = new global::System.Data.DataColumn("Cena karte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCena_karte);
                this.columnPovratna_karta = new global::System.Data.DataColumn("Povratna karta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPovratna_karta);
                this.columnVreme_ukrcavanja = new global::System.Data.DataColumn("Vreme ukrcavanja", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVreme_ukrcavanja);
                this.columnDestinacija = new global::System.Data.DataColumn("Destinacija", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinacija);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRezervacijaID}, true));
                this.columnRezervacijaID.AutoIncrement = true;
                this.columnRezervacijaID.AllowDBNull = false;
                this.columnRezervacijaID.Unique = true;
                this.columnIme.AllowDBNull = false;
                this.columnPrezime.AllowDBNull = false;
                this.columnBroj_telefona.AllowDBNull = false;
                this.columnCena_karte.AllowDBNull = false;
                this.columnPovratna_karta.AllowDBNull = false;
                this.columnVreme_ukrcavanja.AllowDBNull = false;
                this.columnDestinacija.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacija_po_turiRow Newrezervacija_po_turiRow() {
                return ((rezervacija_po_turiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rezervacija_po_turiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rezervacija_po_turiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rezervacija_po_turiRowChanged != null)) {
                    this.rezervacija_po_turiRowChanged(this, new rezervacija_po_turiRowChangeEvent(((rezervacija_po_turiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rezervacija_po_turiRowChanging != null)) {
                    this.rezervacija_po_turiRowChanging(this, new rezervacija_po_turiRowChangeEvent(((rezervacija_po_turiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rezervacija_po_turiRowDeleted != null)) {
                    this.rezervacija_po_turiRowDeleted(this, new rezervacija_po_turiRowChangeEvent(((rezervacija_po_turiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rezervacija_po_turiRowDeleting != null)) {
                    this.rezervacija_po_turiRowDeleting(this, new rezervacija_po_turiRowChangeEvent(((rezervacija_po_turiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removerezervacija_po_turiRow(rezervacija_po_turiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rezervacija_po_turiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vozac_vozilo_po_turiDataTable : global::System.Data.TypedTableBase<vozac_vozilo_po_turiRow> {
            
            private global::System.Data.DataColumn columnTuraID;
            
            private global::System.Data.DataColumn columnVreme_polaska;
            
            private global::System.Data.DataColumn columnStartna_lokacija;
            
            private global::System.Data.DataColumn columnIme_vozaca;
            
            private global::System.Data.DataColumn columnBroj_telefona;
            
            private global::System.Data.DataColumn columnKategorija;
            
            private global::System.Data.DataColumn columnBrend_vozila;
            
            private global::System.Data.DataColumn columnTip_vozila;
            
            private global::System.Data.DataColumn columnBoja_vozila;
            
            private global::System.Data.DataColumn columnBroj_sedista;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozac_vozilo_po_turiDataTable() {
                this.TableName = "vozac_vozilo_po_turi";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal vozac_vozilo_po_turiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected vozac_vozilo_po_turiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TuraIDColumn {
                get {
                    return this.columnTuraID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Vreme_polaskaColumn {
                get {
                    return this.columnVreme_polaska;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Startna_lokacijaColumn {
                get {
                    return this.columnStartna_lokacija;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Ime_vozacaColumn {
                get {
                    return this.columnIme_vozaca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Broj_telefonaColumn {
                get {
                    return this.columnBroj_telefona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KategorijaColumn {
                get {
                    return this.columnKategorija;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Brend_vozilaColumn {
                get {
                    return this.columnBrend_vozila;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tip_vozilaColumn {
                get {
                    return this.columnTip_vozila;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Boja_vozilaColumn {
                get {
                    return this.columnBoja_vozila;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Broj_sedistaColumn {
                get {
                    return this.columnBroj_sedista;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozac_vozilo_po_turiRow this[int index] {
                get {
                    return ((vozac_vozilo_po_turiRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vozac_vozilo_po_turiRowChangeEventHandler vozac_vozilo_po_turiRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vozac_vozilo_po_turiRowChangeEventHandler vozac_vozilo_po_turiRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vozac_vozilo_po_turiRowChangeEventHandler vozac_vozilo_po_turiRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vozac_vozilo_po_turiRowChangeEventHandler vozac_vozilo_po_turiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addvozac_vozilo_po_turiRow(vozac_vozilo_po_turiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozac_vozilo_po_turiRow Addvozac_vozilo_po_turiRow(System.TimeSpan Vreme_polaska, string Startna_lokacija, string Ime_vozaca, string Broj_telefona, string Kategorija, string Brend_vozila, string Tip_vozila, string Boja_vozila, int Broj_sedista) {
                vozac_vozilo_po_turiRow rowvozac_vozilo_po_turiRow = ((vozac_vozilo_po_turiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Vreme_polaska,
                        Startna_lokacija,
                        Ime_vozaca,
                        Broj_telefona,
                        Kategorija,
                        Brend_vozila,
                        Tip_vozila,
                        Boja_vozila,
                        Broj_sedista};
                rowvozac_vozilo_po_turiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvozac_vozilo_po_turiRow);
                return rowvozac_vozilo_po_turiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozac_vozilo_po_turiRow FindByTuraID(int TuraID) {
                return ((vozac_vozilo_po_turiRow)(this.Rows.Find(new object[] {
                            TuraID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                vozac_vozilo_po_turiDataTable cln = ((vozac_vozilo_po_turiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vozac_vozilo_po_turiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnTuraID = base.Columns["TuraID"];
                this.columnVreme_polaska = base.Columns["Vreme polaska"];
                this.columnStartna_lokacija = base.Columns["Startna lokacija"];
                this.columnIme_vozaca = base.Columns["Ime vozaca"];
                this.columnBroj_telefona = base.Columns["Broj telefona"];
                this.columnKategorija = base.Columns["Kategorija"];
                this.columnBrend_vozila = base.Columns["Brend vozila"];
                this.columnTip_vozila = base.Columns["Tip vozila"];
                this.columnBoja_vozila = base.Columns["Boja vozila"];
                this.columnBroj_sedista = base.Columns["Broj sedista"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnTuraID = new global::System.Data.DataColumn("TuraID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTuraID);
                this.columnVreme_polaska = new global::System.Data.DataColumn("Vreme polaska", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVreme_polaska);
                this.columnStartna_lokacija = new global::System.Data.DataColumn("Startna lokacija", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartna_lokacija);
                this.columnIme_vozaca = new global::System.Data.DataColumn("Ime vozaca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIme_vozaca);
                this.columnBroj_telefona = new global::System.Data.DataColumn("Broj telefona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBroj_telefona);
                this.columnKategorija = new global::System.Data.DataColumn("Kategorija", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKategorija);
                this.columnBrend_vozila = new global::System.Data.DataColumn("Brend vozila", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrend_vozila);
                this.columnTip_vozila = new global::System.Data.DataColumn("Tip vozila", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTip_vozila);
                this.columnBoja_vozila = new global::System.Data.DataColumn("Boja vozila", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoja_vozila);
                this.columnBroj_sedista = new global::System.Data.DataColumn("Broj sedista", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBroj_sedista);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTuraID}, true));
                this.columnTuraID.AutoIncrement = true;
                this.columnTuraID.AllowDBNull = false;
                this.columnTuraID.Unique = true;
                this.columnVreme_polaska.AllowDBNull = false;
                this.columnStartna_lokacija.AllowDBNull = false;
                this.columnIme_vozaca.AllowDBNull = false;
                this.columnBroj_telefona.AllowDBNull = false;
                this.columnKategorija.AllowDBNull = false;
                this.columnBrend_vozila.AllowDBNull = false;
                this.columnTip_vozila.AllowDBNull = false;
                this.columnBoja_vozila.AllowDBNull = false;
                this.columnBroj_sedista.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozac_vozilo_po_turiRow Newvozac_vozilo_po_turiRow() {
                return ((vozac_vozilo_po_turiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vozac_vozilo_po_turiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(vozac_vozilo_po_turiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vozac_vozilo_po_turiRowChanged != null)) {
                    this.vozac_vozilo_po_turiRowChanged(this, new vozac_vozilo_po_turiRowChangeEvent(((vozac_vozilo_po_turiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vozac_vozilo_po_turiRowChanging != null)) {
                    this.vozac_vozilo_po_turiRowChanging(this, new vozac_vozilo_po_turiRowChangeEvent(((vozac_vozilo_po_turiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vozac_vozilo_po_turiRowDeleted != null)) {
                    this.vozac_vozilo_po_turiRowDeleted(this, new vozac_vozilo_po_turiRowChangeEvent(((vozac_vozilo_po_turiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vozac_vozilo_po_turiRowDeleting != null)) {
                    this.vozac_vozilo_po_turiRowDeleting(this, new vozac_vozilo_po_turiRowChangeEvent(((vozac_vozilo_po_turiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removevozac_vozilo_po_turiRow(vozac_vozilo_po_turiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                transport_menadzmentDataSet ds = new transport_menadzmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vozac_vozilo_po_turiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class korisniciRow : global::System.Data.DataRow {
            
            private korisniciDataTable tablekorisnici;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal korisniciRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablekorisnici = ((korisniciDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int korisnik_id {
                get {
                    return ((int)(this[this.tablekorisnici.korisnik_idColumn]));
                }
                set {
                    this[this.tablekorisnici.korisnik_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string korisnik {
                get {
                    return ((string)(this[this.tablekorisnici.korisnikColumn]));
                }
                set {
                    this[this.tablekorisnici.korisnikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string lozinka {
                get {
                    return ((string)(this[this.tablekorisnici.lozinkaColumn]));
                }
                set {
                    this[this.tablekorisnici.lozinkaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nivo {
                get {
                    return ((string)(this[this.tablekorisnici.nivoColumn]));
                }
                set {
                    this[this.tablekorisnici.nivoColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class lokacijaRow : global::System.Data.DataRow {
            
            private lokacijaDataTable tablelokacija;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal lokacijaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelokacija = ((lokacijaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int LokacijaID {
                get {
                    return ((int)(this[this.tablelokacija.LokacijaIDColumn]));
                }
                set {
                    this[this.tablelokacija.LokacijaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Grad {
                get {
                    return ((string)(this[this.tablelokacija.GradColumn]));
                }
                set {
                    this[this.tablelokacija.GradColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Naziv {
                get {
                    return ((string)(this[this.tablelokacija.NazivColumn]));
                }
                set {
                    this[this.tablelokacija.NazivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Adresa {
                get {
                    return ((string)(this[this.tablelokacija.AdresaColumn]));
                }
                set {
                    this[this.tablelokacija.AdresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow[] GetturaRowsByfk_tura_startnalokacijaID() {
                if ((this.Table.ChildRelations["fk_tura_startnalokacijaID"] == null)) {
                    return new turaRow[0];
                }
                else {
                    return ((turaRow[])(base.GetChildRows(this.Table.ChildRelations["fk_tura_startnalokacijaID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow[] GetturaRowsByfk_tura_zavrsnalokacijaID() {
                if ((this.Table.ChildRelations["fk_tura_zavrsnalokacijaID"] == null)) {
                    return new turaRow[0];
                }
                else {
                    return ((turaRow[])(base.GetChildRows(this.Table.ChildRelations["fk_tura_zavrsnalokacijaID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class putnikRow : global::System.Data.DataRow {
            
            private putnikDataTable tableputnik;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal putnikRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableputnik = ((putnikDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PutnikID {
                get {
                    return ((int)(this[this.tableputnik.PutnikIDColumn]));
                }
                set {
                    this[this.tableputnik.PutnikIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Ime {
                get {
                    return ((string)(this[this.tableputnik.ImeColumn]));
                }
                set {
                    this[this.tableputnik.ImeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Prezime {
                get {
                    return ((string)(this[this.tableputnik.PrezimeColumn]));
                }
                set {
                    this[this.tableputnik.PrezimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Adresa {
                get {
                    return ((string)(this[this.tableputnik.AdresaColumn]));
                }
                set {
                    this[this.tableputnik.AdresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string telefon {
                get {
                    return ((string)(this[this.tableputnik.telefonColumn]));
                }
                set {
                    this[this.tableputnik.telefonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Godine {
                get {
                    return ((int)(this[this.tableputnik.GodineColumn]));
                }
                set {
                    this[this.tableputnik.GodineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacijaRow[] GetrezervacijaRows() {
                if ((this.Table.ChildRelations["fk_rezervacija_putnikID"] == null)) {
                    return new rezervacijaRow[0];
                }
                else {
                    return ((rezervacijaRow[])(base.GetChildRows(this.Table.ChildRelations["fk_rezervacija_putnikID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rezervacijaRow : global::System.Data.DataRow {
            
            private rezervacijaDataTable tablerezervacija;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal rezervacijaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerezervacija = ((rezervacijaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int RezervacijaID {
                get {
                    return ((int)(this[this.tablerezervacija.RezervacijaIDColumn]));
                }
                set {
                    this[this.tablerezervacija.RezervacijaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Cena {
                get {
                    return ((string)(this[this.tablerezervacija.CenaColumn]));
                }
                set {
                    this[this.tablerezervacija.CenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KreiranaAt {
                get {
                    return ((global::System.DateTime)(this[this.tablerezervacija.KreiranaAtColumn]));
                }
                set {
                    this[this.tablerezervacija.KreiranaAtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Povratna {
                get {
                    return ((string)(this[this.tablerezervacija.PovratnaColumn]));
                }
                set {
                    this[this.tablerezervacija.PovratnaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PutnikID {
                get {
                    return ((int)(this[this.tablerezervacija.PutnikIDColumn]));
                }
                set {
                    this[this.tablerezervacija.PutnikIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TuraID {
                get {
                    return ((int)(this[this.tablerezervacija.TuraIDColumn]));
                }
                set {
                    this[this.tablerezervacija.TuraIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public putnikRow putnikRow {
                get {
                    return ((putnikRow)(this.GetParentRow(this.Table.ParentRelations["fk_rezervacija_putnikID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_rezervacija_putnikID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow turaRow {
                get {
                    return ((turaRow)(this.GetParentRow(this.Table.ParentRelations["fk_rezervacija_turaID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_rezervacija_turaID"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class turaRow : global::System.Data.DataRow {
            
            private turaDataTable tabletura;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal turaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletura = ((turaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TuraID {
                get {
                    return ((int)(this[this.tabletura.TuraIDColumn]));
                }
                set {
                    this[this.tabletura.TuraIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DatumPolaska {
                get {
                    return ((global::System.DateTime)(this[this.tabletura.DatumPolaskaColumn]));
                }
                set {
                    this[this.tabletura.DatumPolaskaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan VremeUkrcavanja {
                get {
                    return ((global::System.TimeSpan)(this[this.tabletura.VremeUkrcavanjaColumn]));
                }
                set {
                    this[this.tabletura.VremeUkrcavanjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan VremePolaska {
                get {
                    return ((global::System.TimeSpan)(this[this.tabletura.VremePolaskaColumn]));
                }
                set {
                    this[this.tabletura.VremePolaskaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DatumStizanja {
                get {
                    return ((global::System.DateTime)(this[this.tabletura.DatumStizanjaColumn]));
                }
                set {
                    this[this.tabletura.DatumStizanjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan VremeStizanja {
                get {
                    return ((global::System.TimeSpan)(this[this.tabletura.VremeStizanjaColumn]));
                }
                set {
                    this[this.tabletura.VremeStizanjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int VoziloID {
                get {
                    return ((int)(this[this.tabletura.VoziloIDColumn]));
                }
                set {
                    this[this.tabletura.VoziloIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int VozacID {
                get {
                    return ((int)(this[this.tabletura.VozacIDColumn]));
                }
                set {
                    this[this.tabletura.VozacIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int StartnaLokacijaID {
                get {
                    return ((int)(this[this.tabletura.StartnaLokacijaIDColumn]));
                }
                set {
                    this[this.tabletura.StartnaLokacijaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ZavrsnaLokacijaID {
                get {
                    return ((int)(this[this.tabletura.ZavrsnaLokacijaIDColumn]));
                }
                set {
                    this[this.tabletura.ZavrsnaLokacijaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Status {
                get {
                    return ((string)(this[this.tabletura.StatusColumn]));
                }
                set {
                    this[this.tabletura.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public lokacijaRow lokacijaRowByfk_tura_startnalokacijaID {
                get {
                    return ((lokacijaRow)(this.GetParentRow(this.Table.ParentRelations["fk_tura_startnalokacijaID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_tura_startnalokacijaID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozacRow vozacRow {
                get {
                    return ((vozacRow)(this.GetParentRow(this.Table.ParentRelations["fk_tura_vozacID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_tura_vozacID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public voziloRow voziloRow {
                get {
                    return ((voziloRow)(this.GetParentRow(this.Table.ParentRelations["fk_tura_voziloID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_tura_voziloID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public lokacijaRow lokacijaRowByfk_tura_zavrsnalokacijaID {
                get {
                    return ((lokacijaRow)(this.GetParentRow(this.Table.ParentRelations["fk_tura_zavrsnalokacijaID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_tura_zavrsnalokacijaID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacijaRow[] GetrezervacijaRows() {
                if ((this.Table.ChildRelations["fk_rezervacija_turaID"] == null)) {
                    return new rezervacijaRow[0];
                }
                else {
                    return ((rezervacijaRow[])(base.GetChildRows(this.Table.ChildRelations["fk_rezervacija_turaID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class vozacRow : global::System.Data.DataRow {
            
            private vozacDataTable tablevozac;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal vozacRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevozac = ((vozacDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int VozacID {
                get {
                    return ((int)(this[this.tablevozac.VozacIDColumn]));
                }
                set {
                    this[this.tablevozac.VozacIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Ime {
                get {
                    return ((string)(this[this.tablevozac.ImeColumn]));
                }
                set {
                    this[this.tablevozac.ImeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Godine {
                get {
                    return ((string)(this[this.tablevozac.GodineColumn]));
                }
                set {
                    this[this.tablevozac.GodineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Telefon {
                get {
                    return ((string)(this[this.tablevozac.TelefonColumn]));
                }
                set {
                    this[this.tablevozac.TelefonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Kategorija {
                get {
                    return ((string)(this[this.tablevozac.KategorijaColumn]));
                }
                set {
                    this[this.tablevozac.KategorijaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ZaposljenAt {
                get {
                    return ((global::System.DateTime)(this[this.tablevozac.ZaposljenAtColumn]));
                }
                set {
                    this[this.tablevozac.ZaposljenAtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow[] GetturaRows() {
                if ((this.Table.ChildRelations["fk_tura_vozacID"] == null)) {
                    return new turaRow[0];
                }
                else {
                    return ((turaRow[])(base.GetChildRows(this.Table.ChildRelations["fk_tura_vozacID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class voziloRow : global::System.Data.DataRow {
            
            private voziloDataTable tablevozilo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal voziloRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevozilo = ((voziloDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int VoziloID {
                get {
                    return ((int)(this[this.tablevozilo.VoziloIDColumn]));
                }
                set {
                    this[this.tablevozilo.VoziloIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Brend {
                get {
                    return ((string)(this[this.tablevozilo.BrendColumn]));
                }
                set {
                    this[this.tablevozilo.BrendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Tip {
                get {
                    return ((string)(this[this.tablevozilo.TipColumn]));
                }
                set {
                    this[this.tablevozilo.TipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Boja {
                get {
                    return ((string)(this[this.tablevozilo.BojaColumn]));
                }
                set {
                    this[this.tablevozilo.BojaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int BrojSedista {
                get {
                    return ((int)(this[this.tablevozilo.BrojSedistaColumn]));
                }
                set {
                    this[this.tablevozilo.BrojSedistaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow[] GetturaRows() {
                if ((this.Table.ChildRelations["fk_tura_voziloID"] == null)) {
                    return new turaRow[0];
                }
                else {
                    return ((turaRow[])(base.GetChildRows(this.Table.ChildRelations["fk_tura_voziloID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tureRow : global::System.Data.DataRow {
            
            private tureDataTable tableture;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal tureRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableture = ((tureDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TuraID {
                get {
                    return ((int)(this[this.tableture.TuraIDColumn]));
                }
                set {
                    this[this.tableture.TuraIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Datum_polaska {
                get {
                    return ((global::System.DateTime)(this[this.tableture.Datum_polaskaColumn]));
                }
                set {
                    this[this.tableture.Datum_polaskaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan Vreme_ukrcavanja {
                get {
                    return ((global::System.TimeSpan)(this[this.tableture.Vreme_ukrcavanjaColumn]));
                }
                set {
                    this[this.tableture.Vreme_ukrcavanjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan Vreme_polaska {
                get {
                    return ((global::System.TimeSpan)(this[this.tableture.Vreme_polaskaColumn]));
                }
                set {
                    this[this.tableture.Vreme_polaskaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Datum_stizanja {
                get {
                    return ((global::System.DateTime)(this[this.tableture.Datum_stizanjaColumn]));
                }
                set {
                    this[this.tableture.Datum_stizanjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan Vreme_stizanja {
                get {
                    return ((global::System.TimeSpan)(this[this.tableture.Vreme_stizanjaColumn]));
                }
                set {
                    this[this.tableture.Vreme_stizanjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Startna_lokacija {
                get {
                    return ((string)(this[this.tableture.Startna_lokacijaColumn]));
                }
                set {
                    this[this.tableture.Startna_lokacijaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Zavrsna_lokacija {
                get {
                    return ((string)(this[this.tableture.Zavrsna_lokacijaColumn]));
                }
                set {
                    this[this.tableture.Zavrsna_lokacijaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Ime_vozaca {
                get {
                    return ((string)(this[this.tableture.Ime_vozacaColumn]));
                }
                set {
                    this[this.tableture.Ime_vozacaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Tip_vozila {
                get {
                    return ((string)(this[this.tableture.Tip_vozilaColumn]));
                }
                set {
                    this[this.tableture.Tip_vozilaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Status {
                get {
                    return ((string)(this[this.tableture.StatusColumn]));
                }
                set {
                    this[this.tableture.StatusColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rezervacija_po_turiRow : global::System.Data.DataRow {
            
            private rezervacija_po_turiDataTable tablerezervacija_po_turi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal rezervacija_po_turiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerezervacija_po_turi = ((rezervacija_po_turiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int RezervacijaID {
                get {
                    return ((int)(this[this.tablerezervacija_po_turi.RezervacijaIDColumn]));
                }
                set {
                    this[this.tablerezervacija_po_turi.RezervacijaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Ime {
                get {
                    return ((string)(this[this.tablerezervacija_po_turi.ImeColumn]));
                }
                set {
                    this[this.tablerezervacija_po_turi.ImeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Prezime {
                get {
                    return ((string)(this[this.tablerezervacija_po_turi.PrezimeColumn]));
                }
                set {
                    this[this.tablerezervacija_po_turi.PrezimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Broj_telefona {
                get {
                    return ((string)(this[this.tablerezervacija_po_turi.Broj_telefonaColumn]));
                }
                set {
                    this[this.tablerezervacija_po_turi.Broj_telefonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Cena_karte {
                get {
                    return ((string)(this[this.tablerezervacija_po_turi.Cena_karteColumn]));
                }
                set {
                    this[this.tablerezervacija_po_turi.Cena_karteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Povratna_karta {
                get {
                    return ((string)(this[this.tablerezervacija_po_turi.Povratna_kartaColumn]));
                }
                set {
                    this[this.tablerezervacija_po_turi.Povratna_kartaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan Vreme_ukrcavanja {
                get {
                    return ((global::System.TimeSpan)(this[this.tablerezervacija_po_turi.Vreme_ukrcavanjaColumn]));
                }
                set {
                    this[this.tablerezervacija_po_turi.Vreme_ukrcavanjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Destinacija {
                get {
                    return ((string)(this[this.tablerezervacija_po_turi.DestinacijaColumn]));
                }
                set {
                    this[this.tablerezervacija_po_turi.DestinacijaColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class vozac_vozilo_po_turiRow : global::System.Data.DataRow {
            
            private vozac_vozilo_po_turiDataTable tablevozac_vozilo_po_turi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal vozac_vozilo_po_turiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevozac_vozilo_po_turi = ((vozac_vozilo_po_turiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TuraID {
                get {
                    return ((int)(this[this.tablevozac_vozilo_po_turi.TuraIDColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.TuraIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan Vreme_polaska {
                get {
                    return ((global::System.TimeSpan)(this[this.tablevozac_vozilo_po_turi.Vreme_polaskaColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.Vreme_polaskaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Startna_lokacija {
                get {
                    return ((string)(this[this.tablevozac_vozilo_po_turi.Startna_lokacijaColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.Startna_lokacijaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Ime_vozaca {
                get {
                    return ((string)(this[this.tablevozac_vozilo_po_turi.Ime_vozacaColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.Ime_vozacaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Broj_telefona {
                get {
                    return ((string)(this[this.tablevozac_vozilo_po_turi.Broj_telefonaColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.Broj_telefonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Kategorija {
                get {
                    return ((string)(this[this.tablevozac_vozilo_po_turi.KategorijaColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.KategorijaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Brend_vozila {
                get {
                    return ((string)(this[this.tablevozac_vozilo_po_turi.Brend_vozilaColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.Brend_vozilaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Tip_vozila {
                get {
                    return ((string)(this[this.tablevozac_vozilo_po_turi.Tip_vozilaColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.Tip_vozilaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Boja_vozila {
                get {
                    return ((string)(this[this.tablevozac_vozilo_po_turi.Boja_vozilaColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.Boja_vozilaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Broj_sedista {
                get {
                    return ((int)(this[this.tablevozac_vozilo_po_turi.Broj_sedistaColumn]));
                }
                set {
                    this[this.tablevozac_vozilo_po_turi.Broj_sedistaColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class korisniciRowChangeEvent : global::System.EventArgs {
            
            private korisniciRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public korisniciRowChangeEvent(korisniciRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public korisniciRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class lokacijaRowChangeEvent : global::System.EventArgs {
            
            private lokacijaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public lokacijaRowChangeEvent(lokacijaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public lokacijaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class putnikRowChangeEvent : global::System.EventArgs {
            
            private putnikRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public putnikRowChangeEvent(putnikRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public putnikRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class rezervacijaRowChangeEvent : global::System.EventArgs {
            
            private rezervacijaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacijaRowChangeEvent(rezervacijaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacijaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class turaRowChangeEvent : global::System.EventArgs {
            
            private turaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRowChangeEvent(turaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public turaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class vozacRowChangeEvent : global::System.EventArgs {
            
            private vozacRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozacRowChangeEvent(vozacRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozacRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class voziloRowChangeEvent : global::System.EventArgs {
            
            private voziloRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public voziloRowChangeEvent(voziloRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public voziloRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class tureRowChangeEvent : global::System.EventArgs {
            
            private tureRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tureRowChangeEvent(tureRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public tureRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class rezervacija_po_turiRowChangeEvent : global::System.EventArgs {
            
            private rezervacija_po_turiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacija_po_turiRowChangeEvent(rezervacija_po_turiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public rezervacija_po_turiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class vozac_vozilo_po_turiRowChangeEvent : global::System.EventArgs {
            
            private vozac_vozilo_po_turiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozac_vozilo_po_turiRowChangeEvent(vozac_vozilo_po_turiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vozac_vozilo_po_turiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SistemPrevoz.transport_menadzmentDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class korisniciTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public korisniciTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "korisnici";
            tableMapping.ColumnMappings.Add("korisnik_id", "korisnik_id");
            tableMapping.ColumnMappings.Add("korisnik", "korisnik");
            tableMapping.ColumnMappings.Add("lozinka", "lozinka");
            tableMapping.ColumnMappings.Add("nivo", "nivo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `transport_menadzment`.`korisnici` WHERE ((`korisnik_id` = :Original_" +
                "korisnik_id) AND (`korisnik` = :Original_korisnik) AND (`lozinka` = :Original_lo" +
                "zinka) AND (`nivo` = :Original_nivo))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.MySql.MySqlParameter param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_korisnik_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "korisnik_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_korisnik";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "korisnik";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_lozinka";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lozinka";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_nivo";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nivo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `transport_menadzment`.`korisnici` (`korisnik`, `lozinka`, `nivo`) VA" +
                "LUES (:korisnik, :lozinka, :nivo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "korisnik";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "korisnik";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "lozinka";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lozinka";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "nivo";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nivo";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `transport_menadzment`.`korisnici` SET `korisnik` = :korisnik, `lozinka` = :lozinka, `nivo` = :nivo WHERE ((`korisnik_id` = :Original_korisnik_id) AND (`korisnik` = :Original_korisnik) AND (`lozinka` = :Original_lozinka) AND (`nivo` = :Original_nivo))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "korisnik";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "korisnik";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "lozinka";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lozinka";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "nivo";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nivo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_korisnik_id";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "korisnik_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_korisnik";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "korisnik";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_lozinka";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "lozinka";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_nivo";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nivo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT korisnik_id, korisnik, lozinka, nivo FROM transport_menadzment.korisnici";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.korisniciDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.korisniciDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            transport_menadzmentDataSet.korisniciDataTable dataTable = new transport_menadzmentDataSet.korisniciDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet.korisniciDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet dataSet) {
            return this.Adapter.Update(dataSet, "korisnici");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_korisnik_id, string Original_korisnik, string Original_lozinka, string Original_nivo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_korisnik_id));
            if ((Original_korisnik == null)) {
                throw new global::System.ArgumentNullException("Original_korisnik");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_korisnik));
            }
            if ((Original_lozinka == null)) {
                throw new global::System.ArgumentNullException("Original_lozinka");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_lozinka));
            }
            if ((Original_nivo == null)) {
                throw new global::System.ArgumentNullException("Original_nivo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_nivo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string korisnik, string lozinka, string nivo) {
            if ((korisnik == null)) {
                throw new global::System.ArgumentNullException("korisnik");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(korisnik));
            }
            if ((lozinka == null)) {
                throw new global::System.ArgumentNullException("lozinka");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(lozinka));
            }
            if ((nivo == null)) {
                throw new global::System.ArgumentNullException("nivo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(nivo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string korisnik, string lozinka, string nivo, int Original_korisnik_id, string Original_korisnik, string Original_lozinka, string Original_nivo) {
            if ((korisnik == null)) {
                throw new global::System.ArgumentNullException("korisnik");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(korisnik));
            }
            if ((lozinka == null)) {
                throw new global::System.ArgumentNullException("lozinka");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(lozinka));
            }
            if ((nivo == null)) {
                throw new global::System.ArgumentNullException("nivo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(nivo));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_korisnik_id));
            if ((Original_korisnik == null)) {
                throw new global::System.ArgumentNullException("Original_korisnik");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_korisnik));
            }
            if ((Original_lozinka == null)) {
                throw new global::System.ArgumentNullException("Original_lozinka");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_lozinka));
            }
            if ((Original_nivo == null)) {
                throw new global::System.ArgumentNullException("Original_nivo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_nivo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lokacijaTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public lokacijaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lokacija";
            tableMapping.ColumnMappings.Add("LokacijaID", "LokacijaID");
            tableMapping.ColumnMappings.Add("Grad", "Grad");
            tableMapping.ColumnMappings.Add("Naziv", "Naziv");
            tableMapping.ColumnMappings.Add("Adresa", "Adresa");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `transport_menadzment`.`lokacija` WHERE ((`LokacijaID` = :Original_Lo" +
                "kacijaID) AND (`Grad` = :Original_Grad) AND (`Naziv` = :Original_Naziv) AND (`Ad" +
                "resa` = :Original_Adresa))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.MySql.MySqlParameter param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_LokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LokacijaID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Grad";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Grad";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Naziv";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Naziv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Adresa";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `transport_menadzment`.`lokacija` (`Grad`, `Naziv`, `Adresa`) VALUES " +
                "(:Grad, :Naziv, :Adresa)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Grad";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Grad";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Naziv";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Naziv";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Adresa";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `transport_menadzment`.`lokacija` SET `Grad` = :Grad, `Naziv` = :Naziv, `A" +
                "dresa` = :Adresa WHERE ((`LokacijaID` = :Original_LokacijaID) AND (`Grad` = :Ori" +
                "ginal_Grad) AND (`Naziv` = :Original_Naziv) AND (`Adresa` = :Original_Adresa))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Grad";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Grad";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Naziv";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Naziv";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Adresa";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_LokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LokacijaID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Grad";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Grad";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Naziv";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Naziv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Adresa";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LokacijaID, Grad, Naziv, Adresa FROM transport_menadzment.lokacija";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.lokacijaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.lokacijaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            transport_menadzmentDataSet.lokacijaDataTable dataTable = new transport_menadzmentDataSet.lokacijaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet.lokacijaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet dataSet) {
            return this.Adapter.Update(dataSet, "lokacija");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_LokacijaID, string Original_Grad, string Original_Naziv, string Original_Adresa) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_LokacijaID));
            if ((Original_Grad == null)) {
                throw new global::System.ArgumentNullException("Original_Grad");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Grad));
            }
            if ((Original_Naziv == null)) {
                throw new global::System.ArgumentNullException("Original_Naziv");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Naziv));
            }
            if ((Original_Adresa == null)) {
                throw new global::System.ArgumentNullException("Original_Adresa");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Adresa));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Grad, string Naziv, string Adresa) {
            if ((Grad == null)) {
                throw new global::System.ArgumentNullException("Grad");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Grad));
            }
            if ((Naziv == null)) {
                throw new global::System.ArgumentNullException("Naziv");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Naziv));
            }
            if ((Adresa == null)) {
                throw new global::System.ArgumentNullException("Adresa");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Adresa));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Grad, string Naziv, string Adresa, int Original_LokacijaID, string Original_Grad, string Original_Naziv, string Original_Adresa) {
            if ((Grad == null)) {
                throw new global::System.ArgumentNullException("Grad");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Grad));
            }
            if ((Naziv == null)) {
                throw new global::System.ArgumentNullException("Naziv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Naziv));
            }
            if ((Adresa == null)) {
                throw new global::System.ArgumentNullException("Adresa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Adresa));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_LokacijaID));
            if ((Original_Grad == null)) {
                throw new global::System.ArgumentNullException("Original_Grad");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Grad));
            }
            if ((Original_Naziv == null)) {
                throw new global::System.ArgumentNullException("Original_Naziv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Naziv));
            }
            if ((Original_Adresa == null)) {
                throw new global::System.ArgumentNullException("Original_Adresa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Adresa));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class putnikTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public putnikTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "putnik";
            tableMapping.ColumnMappings.Add("PutnikID", "PutnikID");
            tableMapping.ColumnMappings.Add("Ime", "Ime");
            tableMapping.ColumnMappings.Add("Prezime", "Prezime");
            tableMapping.ColumnMappings.Add("Adresa", "Adresa");
            tableMapping.ColumnMappings.Add("telefon", "telefon");
            tableMapping.ColumnMappings.Add("Godine", "Godine");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `transport_menadzment`.`putnik` WHERE ((`PutnikID` = :Original_Putnik" +
                "ID) AND (`Ime` = :Original_Ime) AND (`Prezime` = :Original_Prezime) AND (`Adresa" +
                "` = :Original_Adresa) AND (`telefon` = :Original_telefon) AND (`Godine` = :Origi" +
                "nal_Godine))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.MySql.MySqlParameter param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_PutnikID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PutnikID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Ime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Prezime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Prezime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Adresa";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_telefon";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "telefon";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Godine";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Godine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `transport_menadzment`.`putnik` (`Ime`, `Prezime`, `Adresa`, `telefon" +
                "`, `Godine`) VALUES (:Ime, :Prezime, :Adresa, :telefon, :Godine)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Ime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Prezime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Prezime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Adresa";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "telefon";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "telefon";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Godine";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Godine";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `transport_menadzment`.`putnik` SET `Ime` = :Ime, `Prezime` = :Prezime, `Adresa` = :Adresa, `telefon` = :telefon, `Godine` = :Godine WHERE ((`PutnikID` = :Original_PutnikID) AND (`Ime` = :Original_Ime) AND (`Prezime` = :Original_Prezime) AND (`Adresa` = :Original_Adresa) AND (`telefon` = :Original_telefon) AND (`Godine` = :Original_Godine))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Ime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Prezime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Prezime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Adresa";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "telefon";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "telefon";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Godine";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Godine";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_PutnikID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PutnikID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Ime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Prezime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Prezime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Adresa";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_telefon";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "telefon";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Godine";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Godine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PutnikID, Ime, Prezime, Adresa, telefon, Godine FROM transport_menadzment." +
                "putnik";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.putnikDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.putnikDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            transport_menadzmentDataSet.putnikDataTable dataTable = new transport_menadzmentDataSet.putnikDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet.putnikDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet dataSet) {
            return this.Adapter.Update(dataSet, "putnik");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PutnikID, string Original_Ime, string Original_Prezime, string Original_Adresa, string Original_telefon, int Original_Godine) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PutnikID));
            if ((Original_Ime == null)) {
                throw new global::System.ArgumentNullException("Original_Ime");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Ime));
            }
            if ((Original_Prezime == null)) {
                throw new global::System.ArgumentNullException("Original_Prezime");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Prezime));
            }
            if ((Original_Adresa == null)) {
                throw new global::System.ArgumentNullException("Original_Adresa");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Adresa));
            }
            if ((Original_telefon == null)) {
                throw new global::System.ArgumentNullException("Original_telefon");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_telefon));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Godine));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Ime, string Prezime, string Adresa, string telefon, int Godine) {
            if ((Ime == null)) {
                throw new global::System.ArgumentNullException("Ime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ime));
            }
            if ((Prezime == null)) {
                throw new global::System.ArgumentNullException("Prezime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Prezime));
            }
            if ((Adresa == null)) {
                throw new global::System.ArgumentNullException("Adresa");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Adresa));
            }
            if ((telefon == null)) {
                throw new global::System.ArgumentNullException("telefon");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(telefon));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Godine));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ime, string Prezime, string Adresa, string telefon, int Godine, int Original_PutnikID, string Original_Ime, string Original_Prezime, string Original_Adresa, string Original_telefon, int Original_Godine) {
            if ((Ime == null)) {
                throw new global::System.ArgumentNullException("Ime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Ime));
            }
            if ((Prezime == null)) {
                throw new global::System.ArgumentNullException("Prezime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Prezime));
            }
            if ((Adresa == null)) {
                throw new global::System.ArgumentNullException("Adresa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Adresa));
            }
            if ((telefon == null)) {
                throw new global::System.ArgumentNullException("telefon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(telefon));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Godine));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_PutnikID));
            if ((Original_Ime == null)) {
                throw new global::System.ArgumentNullException("Original_Ime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Ime));
            }
            if ((Original_Prezime == null)) {
                throw new global::System.ArgumentNullException("Original_Prezime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Prezime));
            }
            if ((Original_Adresa == null)) {
                throw new global::System.ArgumentNullException("Original_Adresa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Adresa));
            }
            if ((Original_telefon == null)) {
                throw new global::System.ArgumentNullException("Original_telefon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_telefon));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Godine));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rezervacijaTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public rezervacijaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rezervacija";
            tableMapping.ColumnMappings.Add("RezervacijaID", "RezervacijaID");
            tableMapping.ColumnMappings.Add("Cena", "Cena");
            tableMapping.ColumnMappings.Add("KreiranaAt", "KreiranaAt");
            tableMapping.ColumnMappings.Add("Povratna", "Povratna");
            tableMapping.ColumnMappings.Add("PutnikID", "PutnikID");
            tableMapping.ColumnMappings.Add("TuraID", "TuraID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `transport_menadzment`.`rezervacija` WHERE ((`RezervacijaID` = :Original_RezervacijaID) AND (`Cena` = :Original_Cena) AND (`KreiranaAt` = :Original_KreiranaAt) AND (`Povratna` = :Original_Povratna) AND (`PutnikID` = :Original_PutnikID) AND (`TuraID` = :Original_TuraID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.MySql.MySqlParameter param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_RezervacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "RezervacijaID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Cena";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Cena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_KreiranaAt";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "KreiranaAt";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Povratna";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Povratna";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_PutnikID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PutnikID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_TuraID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TuraID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `transport_menadzment`.`rezervacija` (`Cena`, `KreiranaAt`, `Povratna" +
                "`, `PutnikID`, `TuraID`) VALUES (:Cena, :KreiranaAt, :Povratna, :PutnikID, :Tura" +
                "ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Cena";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Cena";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "KreiranaAt";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "KreiranaAt";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Povratna";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Povratna";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "PutnikID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PutnikID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "TuraID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TuraID";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `transport_menadzment`.`rezervacija` SET `Cena` = :Cena, `KreiranaAt` = :KreiranaAt, `Povratna` = :Povratna, `PutnikID` = :PutnikID, `TuraID` = :TuraID WHERE ((`RezervacijaID` = :Original_RezervacijaID) AND (`Cena` = :Original_Cena) AND (`KreiranaAt` = :Original_KreiranaAt) AND (`Povratna` = :Original_Povratna) AND (`PutnikID` = :Original_PutnikID) AND (`TuraID` = :Original_TuraID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Cena";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Cena";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "KreiranaAt";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "KreiranaAt";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Povratna";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Povratna";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "PutnikID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PutnikID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "TuraID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TuraID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_RezervacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "RezervacijaID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Cena";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Cena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_KreiranaAt";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "KreiranaAt";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Povratna";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Povratna";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_PutnikID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "PutnikID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_TuraID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TuraID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RezervacijaID, Cena, KreiranaAt, Povratna, PutnikID, TuraID FROM transport" +
                "_menadzment.rezervacija";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.rezervacijaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.rezervacijaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            transport_menadzmentDataSet.rezervacijaDataTable dataTable = new transport_menadzmentDataSet.rezervacijaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet.rezervacijaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet dataSet) {
            return this.Adapter.Update(dataSet, "rezervacija");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RezervacijaID, string Original_Cena, System.DateTime Original_KreiranaAt, string Original_Povratna, int Original_PutnikID, int Original_TuraID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RezervacijaID));
            if ((Original_Cena == null)) {
                throw new global::System.ArgumentNullException("Original_Cena");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Cena));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_KreiranaAt));
            if ((Original_Povratna == null)) {
                throw new global::System.ArgumentNullException("Original_Povratna");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Povratna));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_PutnikID));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_TuraID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Cena, System.DateTime KreiranaAt, string Povratna, int PutnikID, int TuraID) {
            if ((Cena == null)) {
                throw new global::System.ArgumentNullException("Cena");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Cena));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(KreiranaAt));
            if ((Povratna == null)) {
                throw new global::System.ArgumentNullException("Povratna");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Povratna));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PutnikID));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(TuraID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Cena, System.DateTime KreiranaAt, string Povratna, int PutnikID, int TuraID, int Original_RezervacijaID, string Original_Cena, System.DateTime Original_KreiranaAt, string Original_Povratna, int Original_PutnikID, int Original_TuraID) {
            if ((Cena == null)) {
                throw new global::System.ArgumentNullException("Cena");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Cena));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(KreiranaAt));
            if ((Povratna == null)) {
                throw new global::System.ArgumentNullException("Povratna");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Povratna));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PutnikID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(TuraID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_RezervacijaID));
            if ((Original_Cena == null)) {
                throw new global::System.ArgumentNullException("Original_Cena");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Cena));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_KreiranaAt));
            if ((Original_Povratna == null)) {
                throw new global::System.ArgumentNullException("Original_Povratna");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Povratna));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_PutnikID));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_TuraID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class turaTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public turaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tura";
            tableMapping.ColumnMappings.Add("TuraID", "TuraID");
            tableMapping.ColumnMappings.Add("DatumPolaska", "DatumPolaska");
            tableMapping.ColumnMappings.Add("VremeUkrcavanja", "VremeUkrcavanja");
            tableMapping.ColumnMappings.Add("VremePolaska", "VremePolaska");
            tableMapping.ColumnMappings.Add("DatumStizanja", "DatumStizanja");
            tableMapping.ColumnMappings.Add("VremeStizanja", "VremeStizanja");
            tableMapping.ColumnMappings.Add("VoziloID", "VoziloID");
            tableMapping.ColumnMappings.Add("VozacID", "VozacID");
            tableMapping.ColumnMappings.Add("StartnaLokacijaID", "StartnaLokacijaID");
            tableMapping.ColumnMappings.Add("ZavrsnaLokacijaID", "ZavrsnaLokacijaID");
            tableMapping.ColumnMappings.Add("Status", "Status");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `transport_menadzment`.`tura` WHERE ((`TuraID` = :Original_TuraID) AND (`DatumPolaska` = :Original_DatumPolaska) AND (`VremeUkrcavanja` = :Original_VremeUkrcavanja) AND (`VremePolaska` = :Original_VremePolaska) AND (`DatumStizanja` = :Original_DatumStizanja) AND (`VremeStizanja` = :Original_VremeStizanja) AND (`VoziloID` = :Original_VoziloID) AND (`VozacID` = :Original_VozacID) AND (`StartnaLokacijaID` = :Original_StartnaLokacijaID) AND (`ZavrsnaLokacijaID` = :Original_ZavrsnaLokacijaID) AND (`Status` = :Original_Status))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.MySql.MySqlParameter param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_TuraID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TuraID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_DatumPolaska";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumPolaska";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VremeUkrcavanja";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremeUkrcavanja";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VremePolaska";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremePolaska";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_DatumStizanja";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumStizanja";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VremeStizanja";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremeStizanja";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VoziloID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VoziloID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VozacID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VozacID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_StartnaLokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "StartnaLokacijaID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_ZavrsnaLokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ZavrsnaLokacijaID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Status";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `transport_menadzment`.`tura` (`DatumPolaska`, `VremeUkrcavanja`, `VremePolaska`, `DatumStizanja`, `VremeStizanja`, `VoziloID`, `VozacID`, `StartnaLokacijaID`, `ZavrsnaLokacijaID`, `Status`) VALUES (:DatumPolaska, :VremeUkrcavanja, :VremePolaska, :DatumStizanja, :VremeStizanja, :VoziloID, :VozacID, :StartnaLokacijaID, :ZavrsnaLokacijaID, :Status)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "DatumPolaska";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumPolaska";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VremeUkrcavanja";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremeUkrcavanja";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VremePolaska";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremePolaska";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "DatumStizanja";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumStizanja";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VremeStizanja";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremeStizanja";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VoziloID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VoziloID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VozacID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VozacID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "StartnaLokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "StartnaLokacijaID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "ZavrsnaLokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ZavrsnaLokacijaID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Status";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Status";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `transport_menadzment`.`tura` SET `DatumPolaska` = :DatumPolaska, `VremeUkrcavanja` = :VremeUkrcavanja, `VremePolaska` = :VremePolaska, `DatumStizanja` = :DatumStizanja, `VremeStizanja` = :VremeStizanja, `VoziloID` = :VoziloID, `VozacID` = :VozacID, `StartnaLokacijaID` = :StartnaLokacijaID, `ZavrsnaLokacijaID` = :ZavrsnaLokacijaID, `Status` = :Status WHERE ((`TuraID` = :Original_TuraID) AND (`DatumPolaska` = :Original_DatumPolaska) AND (`VremeUkrcavanja` = :Original_VremeUkrcavanja) AND (`VremePolaska` = :Original_VremePolaska) AND (`DatumStizanja` = :Original_DatumStizanja) AND (`VremeStizanja` = :Original_VremeStizanja) AND (`VoziloID` = :Original_VoziloID) AND (`VozacID` = :Original_VozacID) AND (`StartnaLokacijaID` = :Original_StartnaLokacijaID) AND (`ZavrsnaLokacijaID` = :Original_ZavrsnaLokacijaID) AND (`Status` = :Original_Status))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "DatumPolaska";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumPolaska";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VremeUkrcavanja";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremeUkrcavanja";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VremePolaska";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremePolaska";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "DatumStizanja";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumStizanja";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VremeStizanja";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremeStizanja";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VoziloID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VoziloID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "VozacID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VozacID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "StartnaLokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "StartnaLokacijaID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "ZavrsnaLokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ZavrsnaLokacijaID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Status";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Status";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_TuraID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "TuraID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_DatumPolaska";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumPolaska";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VremeUkrcavanja";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremeUkrcavanja";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VremePolaska";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremePolaska";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_DatumStizanja";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumStizanja";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VremeStizanja";
            param.DbType = global::System.Data.DbType.Time;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "VremeStizanja";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VoziloID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VoziloID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VozacID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VozacID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_StartnaLokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "StartnaLokacijaID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_ZavrsnaLokacijaID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ZavrsnaLokacijaID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Status";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Status";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TuraID, DatumPolaska, VremeUkrcavanja, VremePolaska, DatumStizanja, VremeS" +
                "tizanja, VoziloID, VozacID, StartnaLokacijaID, ZavrsnaLokacijaID, Status FROM tr" +
                "ansport_menadzment.tura";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.turaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.turaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            transport_menadzmentDataSet.turaDataTable dataTable = new transport_menadzmentDataSet.turaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet.turaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tura");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_TuraID, System.DateTime Original_DatumPolaska, System.DateTime Original_VremeUkrcavanja, System.DateTime Original_VremePolaska, System.DateTime Original_DatumStizanja, System.DateTime Original_VremeStizanja, int Original_VoziloID, int Original_VozacID, int Original_StartnaLokacijaID, int Original_ZavrsnaLokacijaID, string Original_Status) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TuraID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_DatumPolaska));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_VremeUkrcavanja));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_VremePolaska));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DatumStizanja));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_VremeStizanja));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_VoziloID));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_VozacID));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_StartnaLokacijaID));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_ZavrsnaLokacijaID));
            if ((Original_Status == null)) {
                throw new global::System.ArgumentNullException("Original_Status");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Status));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime DatumPolaska, System.DateTime VremeUkrcavanja, System.DateTime VremePolaska, System.DateTime DatumStizanja, System.DateTime VremeStizanja, int VoziloID, int VozacID, int StartnaLokacijaID, int ZavrsnaLokacijaID, string Status) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(DatumPolaska));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(VremeUkrcavanja));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(VremePolaska));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DatumStizanja));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(VremeStizanja));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(VoziloID));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(VozacID));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(StartnaLokacijaID));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(ZavrsnaLokacijaID));
            if ((Status == null)) {
                throw new global::System.ArgumentNullException("Status");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Status));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime DatumPolaska, 
                    System.DateTime VremeUkrcavanja, 
                    System.DateTime VremePolaska, 
                    System.DateTime DatumStizanja, 
                    System.DateTime VremeStizanja, 
                    int VoziloID, 
                    int VozacID, 
                    int StartnaLokacijaID, 
                    int ZavrsnaLokacijaID, 
                    string Status, 
                    int Original_TuraID, 
                    System.DateTime Original_DatumPolaska, 
                    System.DateTime Original_VremeUkrcavanja, 
                    System.DateTime Original_VremePolaska, 
                    System.DateTime Original_DatumStizanja, 
                    System.DateTime Original_VremeStizanja, 
                    int Original_VoziloID, 
                    int Original_VozacID, 
                    int Original_StartnaLokacijaID, 
                    int Original_ZavrsnaLokacijaID, 
                    string Original_Status) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(DatumPolaska));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(VremeUkrcavanja));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(VremePolaska));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DatumStizanja));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(VremeStizanja));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(VoziloID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(VozacID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(StartnaLokacijaID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ZavrsnaLokacijaID));
            if ((Status == null)) {
                throw new global::System.ArgumentNullException("Status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Status));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_TuraID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_DatumPolaska));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_VremeUkrcavanja));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_VremePolaska));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_DatumStizanja));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_VremeStizanja));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_VoziloID));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_VozacID));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_StartnaLokacijaID));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ZavrsnaLokacijaID));
            if ((Original_Status == null)) {
                throw new global::System.ArgumentNullException("Original_Status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Status));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vozacTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public vozacTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vozac";
            tableMapping.ColumnMappings.Add("VozacID", "VozacID");
            tableMapping.ColumnMappings.Add("Ime", "Ime");
            tableMapping.ColumnMappings.Add("Godine", "Godine");
            tableMapping.ColumnMappings.Add("Telefon", "Telefon");
            tableMapping.ColumnMappings.Add("Kategorija", "Kategorija");
            tableMapping.ColumnMappings.Add("ZaposljenAt", "ZaposljenAt");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `transport_menadzment`.`vozac` WHERE ((`VozacID` = :Original_VozacID) AND (`Ime` = :Original_Ime) AND (`Godine` = :Original_Godine) AND (`Telefon` = :Original_Telefon) AND (`Kategorija` = :Original_Kategorija) AND (`ZaposljenAt` = :Original_ZaposljenAt))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.MySql.MySqlParameter param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VozacID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VozacID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Ime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Godine";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Godine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Telefon";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Telefon";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Kategorija";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Kategorija";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_ZaposljenAt";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "ZaposljenAt";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `transport_menadzment`.`vozac` (`Ime`, `Godine`, `Telefon`, `Kategori" +
                "ja`, `ZaposljenAt`) VALUES (:Ime, :Godine, :Telefon, :Kategorija, :ZaposljenAt)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Ime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Godine";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Godine";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Telefon";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Telefon";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Kategorija";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Kategorija";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "ZaposljenAt";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "ZaposljenAt";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `transport_menadzment`.`vozac` SET `Ime` = :Ime, `Godine` = :Godine, `Telefon` = :Telefon, `Kategorija` = :Kategorija, `ZaposljenAt` = :ZaposljenAt WHERE ((`VozacID` = :Original_VozacID) AND (`Ime` = :Original_Ime) AND (`Godine` = :Original_Godine) AND (`Telefon` = :Original_Telefon) AND (`Kategorija` = :Original_Kategorija) AND (`ZaposljenAt` = :Original_ZaposljenAt))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Ime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Godine";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Godine";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Telefon";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Telefon";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Kategorija";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Kategorija";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "ZaposljenAt";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "ZaposljenAt";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VozacID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VozacID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Ime";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Godine";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Godine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Telefon";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Telefon";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Kategorija";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Char;
            param.IsNullable = true;
            param.SourceColumn = "Kategorija";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_ZaposljenAt";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "ZaposljenAt";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT VozacID, Ime, Godine, Telefon, Kategorija, ZaposljenAt FROM transport_mena" +
                "dzment.vozac";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.vozacDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.vozacDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            transport_menadzmentDataSet.vozacDataTable dataTable = new transport_menadzmentDataSet.vozacDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet.vozacDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet dataSet) {
            return this.Adapter.Update(dataSet, "vozac");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_VozacID, string Original_Ime, string Original_Godine, string Original_Telefon, string Original_Kategorija, System.DateTime Original_ZaposljenAt) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_VozacID));
            if ((Original_Ime == null)) {
                throw new global::System.ArgumentNullException("Original_Ime");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Ime));
            }
            if ((Original_Godine == null)) {
                throw new global::System.ArgumentNullException("Original_Godine");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Godine));
            }
            if ((Original_Telefon == null)) {
                throw new global::System.ArgumentNullException("Original_Telefon");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Telefon));
            }
            if ((Original_Kategorija == null)) {
                throw new global::System.ArgumentNullException("Original_Kategorija");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Kategorija));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_ZaposljenAt));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Ime, string Godine, string Telefon, string Kategorija, System.DateTime ZaposljenAt) {
            if ((Ime == null)) {
                throw new global::System.ArgumentNullException("Ime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ime));
            }
            if ((Godine == null)) {
                throw new global::System.ArgumentNullException("Godine");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Godine));
            }
            if ((Telefon == null)) {
                throw new global::System.ArgumentNullException("Telefon");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Telefon));
            }
            if ((Kategorija == null)) {
                throw new global::System.ArgumentNullException("Kategorija");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Kategorija));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ZaposljenAt));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ime, string Godine, string Telefon, string Kategorija, System.DateTime ZaposljenAt, int Original_VozacID, string Original_Ime, string Original_Godine, string Original_Telefon, string Original_Kategorija, System.DateTime Original_ZaposljenAt) {
            if ((Ime == null)) {
                throw new global::System.ArgumentNullException("Ime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Ime));
            }
            if ((Godine == null)) {
                throw new global::System.ArgumentNullException("Godine");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Godine));
            }
            if ((Telefon == null)) {
                throw new global::System.ArgumentNullException("Telefon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Telefon));
            }
            if ((Kategorija == null)) {
                throw new global::System.ArgumentNullException("Kategorija");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Kategorija));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ZaposljenAt));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_VozacID));
            if ((Original_Ime == null)) {
                throw new global::System.ArgumentNullException("Original_Ime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Ime));
            }
            if ((Original_Godine == null)) {
                throw new global::System.ArgumentNullException("Original_Godine");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Godine));
            }
            if ((Original_Telefon == null)) {
                throw new global::System.ArgumentNullException("Original_Telefon");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Telefon));
            }
            if ((Original_Kategorija == null)) {
                throw new global::System.ArgumentNullException("Original_Kategorija");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Kategorija));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_ZaposljenAt));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class voziloTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public voziloTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vozilo";
            tableMapping.ColumnMappings.Add("VoziloID", "VoziloID");
            tableMapping.ColumnMappings.Add("Brend", "Brend");
            tableMapping.ColumnMappings.Add("Tip", "Tip");
            tableMapping.ColumnMappings.Add("Boja", "Boja");
            tableMapping.ColumnMappings.Add("BrojSedista", "BrojSedista");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `transport_menadzment`.`vozilo` WHERE ((`VoziloID` = :Original_Vozilo" +
                "ID) AND (`Brend` = :Original_Brend) AND (`Tip` = :Original_Tip) AND (`Boja` = :O" +
                "riginal_Boja) AND (`BrojSedista` = :Original_BrojSedista))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.MySql.MySqlParameter param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VoziloID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VoziloID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Brend";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Brend";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Tip";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Tip";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Boja";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Boja";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_BrojSedista";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "BrojSedista";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `transport_menadzment`.`vozilo` (`Brend`, `Tip`, `Boja`, `BrojSedista" +
                "`) VALUES (:Brend, :Tip, :Boja, :BrojSedista)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Brend";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Brend";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Tip";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Tip";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Boja";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Boja";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "BrojSedista";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "BrojSedista";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.MySql.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `transport_menadzment`.`vozilo` SET `Brend` = :Brend, `Tip` = :Tip, `Boja` = :Boja, `BrojSedista` = :BrojSedista WHERE ((`VoziloID` = :Original_VoziloID) AND (`Brend` = :Original_Brend) AND (`Tip` = :Original_Tip) AND (`Boja` = :Original_Boja) AND (`BrojSedista` = :Original_BrojSedista))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Brend";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Brend";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Tip";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Tip";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Boja";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Boja";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "BrojSedista";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "BrojSedista";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_VoziloID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VoziloID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Brend";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Brend";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Tip";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Tip";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_Boja";
            param.MySqlType = global::Devart.Data.MySql.MySqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Boja";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "Original_BrojSedista";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "BrojSedista";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT VoziloID, Brend, Tip, Boja, BrojSedista FROM transport_menadzment.vozilo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.voziloDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.voziloDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            transport_menadzmentDataSet.voziloDataTable dataTable = new transport_menadzmentDataSet.voziloDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet.voziloDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(transport_menadzmentDataSet dataSet) {
            return this.Adapter.Update(dataSet, "vozilo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_VoziloID, string Original_Brend, string Original_Tip, string Original_Boja, int Original_BrojSedista) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_VoziloID));
            if ((Original_Brend == null)) {
                throw new global::System.ArgumentNullException("Original_Brend");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Brend));
            }
            if ((Original_Tip == null)) {
                throw new global::System.ArgumentNullException("Original_Tip");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Tip));
            }
            if ((Original_Boja == null)) {
                throw new global::System.ArgumentNullException("Original_Boja");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Boja));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_BrojSedista));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Brend, string Tip, string Boja, int BrojSedista) {
            if ((Brend == null)) {
                throw new global::System.ArgumentNullException("Brend");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Brend));
            }
            if ((Tip == null)) {
                throw new global::System.ArgumentNullException("Tip");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Tip));
            }
            if ((Boja == null)) {
                throw new global::System.ArgumentNullException("Boja");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Boja));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(BrojSedista));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Brend, string Tip, string Boja, int BrojSedista, int Original_VoziloID, string Original_Brend, string Original_Tip, string Original_Boja, int Original_BrojSedista) {
            if ((Brend == null)) {
                throw new global::System.ArgumentNullException("Brend");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Brend));
            }
            if ((Tip == null)) {
                throw new global::System.ArgumentNullException("Tip");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Tip));
            }
            if ((Boja == null)) {
                throw new global::System.ArgumentNullException("Boja");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Boja));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(BrojSedista));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_VoziloID));
            if ((Original_Brend == null)) {
                throw new global::System.ArgumentNullException("Original_Brend");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Brend));
            }
            if ((Original_Tip == null)) {
                throw new global::System.ArgumentNullException("Original_Tip");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Tip));
            }
            if ((Original_Boja == null)) {
                throw new global::System.ArgumentNullException("Original_Boja");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Boja));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_BrojSedista));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tureTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public tureTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ture";
            tableMapping.ColumnMappings.Add("TuraID", "TuraID");
            tableMapping.ColumnMappings.Add("Datum polaska", "Datum polaska");
            tableMapping.ColumnMappings.Add("Vreme ukrcavanja", "Vreme ukrcavanja");
            tableMapping.ColumnMappings.Add("Vreme polaska", "Vreme polaska");
            tableMapping.ColumnMappings.Add("Datum stizanja", "Datum stizanja");
            tableMapping.ColumnMappings.Add("Vreme stizanja", "Vreme stizanja");
            tableMapping.ColumnMappings.Add("Startna lokacija", "Startna lokacija");
            tableMapping.ColumnMappings.Add("Zavrsna lokacija", "Zavrsna lokacija");
            tableMapping.ColumnMappings.Add("Ime vozaca", "Ime vozaca");
            tableMapping.ColumnMappings.Add("Tip vozila", "Tip vozila");
            tableMapping.ColumnMappings.Add("Status", "Status");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TuraID, `Datum polaska`, `Vreme ukrcavanja`, `Vreme polaska`, `Datum stiza" +
                "nja`, `Vreme stizanja`, `Startna lokacija`, `Zavrsna lokacija`, `Ime vozaca`, `T" +
                "ip vozila`, Status FROM transport_menadzment.ture";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.tureDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.tureDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            transport_menadzmentDataSet.tureDataTable dataTable = new transport_menadzmentDataSet.tureDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rezervacija_po_turiTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public rezervacija_po_turiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rezervacija_po_turi";
            tableMapping.ColumnMappings.Add("RezervacijaID", "RezervacijaID");
            tableMapping.ColumnMappings.Add("Ime", "Ime");
            tableMapping.ColumnMappings.Add("Prezime", "Prezime");
            tableMapping.ColumnMappings.Add("Broj telefona", "Broj telefona");
            tableMapping.ColumnMappings.Add("Cena karte", "Cena karte");
            tableMapping.ColumnMappings.Add("Povratna karta", "Povratna karta");
            tableMapping.ColumnMappings.Add("Vreme ukrcavanja", "Vreme ukrcavanja");
            tableMapping.ColumnMappings.Add("Destinacija", "Destinacija");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "transport_menadzment.rezervacija_po_turi";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::Devart.Data.MySql.MySqlParameter param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "tempturaid";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.rezervacija_po_turiDataTable dataTable, global::System.Nullable<int> tempturaid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tempturaid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(tempturaid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.rezervacija_po_turiDataTable GetData(global::System.Nullable<int> tempturaid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tempturaid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(tempturaid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            transport_menadzmentDataSet.rezervacija_po_turiDataTable dataTable = new transport_menadzmentDataSet.rezervacija_po_turiDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vozac_vozilo_po_turiTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.MySql.MySqlDataAdapter _adapter;
        
        private global::Devart.Data.MySql.MySqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.MySql.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public vozac_vozilo_po_turiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.MySql.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.MySql.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.MySql.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.MySql.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.MySql.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vozac_vozilo_po_turi";
            tableMapping.ColumnMappings.Add("TuraID", "TuraID");
            tableMapping.ColumnMappings.Add("Vreme polaska", "Vreme polaska");
            tableMapping.ColumnMappings.Add("Startna lokacija", "Startna lokacija");
            tableMapping.ColumnMappings.Add("Ime vozaca", "Ime vozaca");
            tableMapping.ColumnMappings.Add("Broj telefona", "Broj telefona");
            tableMapping.ColumnMappings.Add("Kategorija", "Kategorija");
            tableMapping.ColumnMappings.Add("Brend vozila", "Brend vozila");
            tableMapping.ColumnMappings.Add("Tip vozila", "Tip vozila");
            tableMapping.ColumnMappings.Add("Boja vozila", "Boja vozila");
            tableMapping.ColumnMappings.Add("Broj sedista", "Broj sedista");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.MySql.MySqlConnection();
            this._connection.ConnectionString = global::SistemPrevoz.Properties.Settings.Default.prevozConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.MySql.MySqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.MySql.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "transport_menadzment.vozac_vozilo_po_turi";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::Devart.Data.MySql.MySqlParameter param = new global::Devart.Data.MySql.MySqlParameter();
            param.ParameterName = "tempturaid";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlType = global::Devart.Data.MySql.MySqlType.Int;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(transport_menadzmentDataSet.vozac_vozilo_po_turiDataTable dataTable, global::System.Nullable<int> tempturaid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tempturaid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(tempturaid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual transport_menadzmentDataSet.vozac_vozilo_po_turiDataTable GetData(global::System.Nullable<int> tempturaid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tempturaid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(tempturaid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            transport_menadzmentDataSet.vozac_vozilo_po_turiDataTable dataTable = new transport_menadzmentDataSet.vozac_vozilo_po_turiDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private korisniciTableAdapter _korisniciTableAdapter;
        
        private lokacijaTableAdapter _lokacijaTableAdapter;
        
        private putnikTableAdapter _putnikTableAdapter;
        
        private rezervacijaTableAdapter _rezervacijaTableAdapter;
        
        private turaTableAdapter _turaTableAdapter;
        
        private vozacTableAdapter _vozacTableAdapter;
        
        private voziloTableAdapter _voziloTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public korisniciTableAdapter korisniciTableAdapter {
            get {
                return this._korisniciTableAdapter;
            }
            set {
                this._korisniciTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public lokacijaTableAdapter lokacijaTableAdapter {
            get {
                return this._lokacijaTableAdapter;
            }
            set {
                this._lokacijaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public putnikTableAdapter putnikTableAdapter {
            get {
                return this._putnikTableAdapter;
            }
            set {
                this._putnikTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public rezervacijaTableAdapter rezervacijaTableAdapter {
            get {
                return this._rezervacijaTableAdapter;
            }
            set {
                this._rezervacijaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public turaTableAdapter turaTableAdapter {
            get {
                return this._turaTableAdapter;
            }
            set {
                this._turaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public vozacTableAdapter vozacTableAdapter {
            get {
                return this._vozacTableAdapter;
            }
            set {
                this._vozacTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public voziloTableAdapter voziloTableAdapter {
            get {
                return this._voziloTableAdapter;
            }
            set {
                this._voziloTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._korisniciTableAdapter != null) 
                            && (this._korisniciTableAdapter.Connection != null))) {
                    return this._korisniciTableAdapter.Connection;
                }
                if (((this._lokacijaTableAdapter != null) 
                            && (this._lokacijaTableAdapter.Connection != null))) {
                    return this._lokacijaTableAdapter.Connection;
                }
                if (((this._putnikTableAdapter != null) 
                            && (this._putnikTableAdapter.Connection != null))) {
                    return this._putnikTableAdapter.Connection;
                }
                if (((this._rezervacijaTableAdapter != null) 
                            && (this._rezervacijaTableAdapter.Connection != null))) {
                    return this._rezervacijaTableAdapter.Connection;
                }
                if (((this._turaTableAdapter != null) 
                            && (this._turaTableAdapter.Connection != null))) {
                    return this._turaTableAdapter.Connection;
                }
                if (((this._vozacTableAdapter != null) 
                            && (this._vozacTableAdapter.Connection != null))) {
                    return this._vozacTableAdapter.Connection;
                }
                if (((this._voziloTableAdapter != null) 
                            && (this._voziloTableAdapter.Connection != null))) {
                    return this._voziloTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._korisniciTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lokacijaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._putnikTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rezervacijaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._turaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vozacTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._voziloTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(transport_menadzmentDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lokacijaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.lokacija.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lokacijaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vozacTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.vozac.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vozacTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._voziloTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.vozilo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._voziloTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._putnikTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.putnik.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._putnikTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._turaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tura.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._turaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._korisniciTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.korisnici.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._korisniciTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rezervacijaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.rezervacija.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rezervacijaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(transport_menadzmentDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._lokacijaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.lokacija.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lokacijaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vozacTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.vozac.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vozacTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._voziloTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.vozilo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._voziloTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._putnikTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.putnik.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._putnikTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._turaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tura.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._turaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._korisniciTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.korisnici.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._korisniciTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rezervacijaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.rezervacija.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rezervacijaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(transport_menadzmentDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._rezervacijaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.rezervacija.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rezervacijaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._korisniciTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.korisnici.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._korisniciTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._turaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tura.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._turaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._putnikTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.putnik.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._putnikTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._voziloTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.vozilo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._voziloTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vozacTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.vozac.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vozacTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lokacijaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.lokacija.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lokacijaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(transport_menadzmentDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._korisniciTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._korisniciTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lokacijaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lokacijaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._putnikTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._putnikTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rezervacijaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rezervacijaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._turaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._turaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._vozacTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vozacTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._voziloTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._voziloTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._korisniciTableAdapter != null)) {
                    revertConnections.Add(this._korisniciTableAdapter, this._korisniciTableAdapter.Connection);
                    this._korisniciTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(workConnection));
                    this._korisniciTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._korisniciTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._korisniciTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._korisniciTableAdapter.Adapter);
                    }
                }
                if ((this._lokacijaTableAdapter != null)) {
                    revertConnections.Add(this._lokacijaTableAdapter, this._lokacijaTableAdapter.Connection);
                    this._lokacijaTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(workConnection));
                    this._lokacijaTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._lokacijaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lokacijaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lokacijaTableAdapter.Adapter);
                    }
                }
                if ((this._putnikTableAdapter != null)) {
                    revertConnections.Add(this._putnikTableAdapter, this._putnikTableAdapter.Connection);
                    this._putnikTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(workConnection));
                    this._putnikTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._putnikTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._putnikTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._putnikTableAdapter.Adapter);
                    }
                }
                if ((this._rezervacijaTableAdapter != null)) {
                    revertConnections.Add(this._rezervacijaTableAdapter, this._rezervacijaTableAdapter.Connection);
                    this._rezervacijaTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(workConnection));
                    this._rezervacijaTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._rezervacijaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rezervacijaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rezervacijaTableAdapter.Adapter);
                    }
                }
                if ((this._turaTableAdapter != null)) {
                    revertConnections.Add(this._turaTableAdapter, this._turaTableAdapter.Connection);
                    this._turaTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(workConnection));
                    this._turaTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._turaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._turaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._turaTableAdapter.Adapter);
                    }
                }
                if ((this._vozacTableAdapter != null)) {
                    revertConnections.Add(this._vozacTableAdapter, this._vozacTableAdapter.Connection);
                    this._vozacTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(workConnection));
                    this._vozacTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._vozacTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vozacTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vozacTableAdapter.Adapter);
                    }
                }
                if ((this._voziloTableAdapter != null)) {
                    revertConnections.Add(this._voziloTableAdapter, this._voziloTableAdapter.Connection);
                    this._voziloTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(workConnection));
                    this._voziloTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._voziloTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._voziloTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._voziloTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._korisniciTableAdapter != null)) {
                    this._korisniciTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(revertConnections[this._korisniciTableAdapter]));
                    this._korisniciTableAdapter.Transaction = null;
                }
                if ((this._lokacijaTableAdapter != null)) {
                    this._lokacijaTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(revertConnections[this._lokacijaTableAdapter]));
                    this._lokacijaTableAdapter.Transaction = null;
                }
                if ((this._putnikTableAdapter != null)) {
                    this._putnikTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(revertConnections[this._putnikTableAdapter]));
                    this._putnikTableAdapter.Transaction = null;
                }
                if ((this._rezervacijaTableAdapter != null)) {
                    this._rezervacijaTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(revertConnections[this._rezervacijaTableAdapter]));
                    this._rezervacijaTableAdapter.Transaction = null;
                }
                if ((this._turaTableAdapter != null)) {
                    this._turaTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(revertConnections[this._turaTableAdapter]));
                    this._turaTableAdapter.Transaction = null;
                }
                if ((this._vozacTableAdapter != null)) {
                    this._vozacTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(revertConnections[this._vozacTableAdapter]));
                    this._vozacTableAdapter.Transaction = null;
                }
                if ((this._voziloTableAdapter != null)) {
                    this._voziloTableAdapter.Connection = ((global::Devart.Data.MySql.MySqlConnection)(revertConnections[this._voziloTableAdapter]));
                    this._voziloTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591